[{"short_id":"eyczwj","short_id_url":"https://lobste.rs/s/eyczwj","created_at":"2023-04-07T07:32:07.000-05:00","title":"WebMutex","url":"https://webmutex.io","score":30,"flags":0,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eyczwj/webmutex","submitter_user":{"username":"izabera","created_at":"2017-09-18T02:14:32.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":179,"avatar_url":"/avatars/izabera-100.png","invited_by_user":"smlb","github_username":"izabera"},"tags":["api","web"]},{"short_id":"68wbn5","short_id_url":"https://lobste.rs/s/68wbn5","created_at":"2023-04-07T11:38:18.000-05:00","title":"Who's Hiring? Q2FY2023","url":"","score":22,"flags":0,"comment_count":3,"description":"\u003cp\u003eSpringtime is upon us, along with “macroeconomic conditions”. :S\u003c/p\u003e\n\u003cp\u003eTemplate:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e**Company**:** XXXXXX\n\n**Company site:** XXXXX\n\n**Position(s):** XXXXXX\n\n**Location:** XXXXXX (please specify whether REMOTE or ONSITE)\n\n**Description:** XXXXXX\n\n**Tech stack:** XXXXXX\n\n**Compensation:** Salary, equity, vacation, major benefits.\n\n**Contact:** XXXXXX\n\u003c/code\u003e\u003c/pre\u003e\n","description_plain":"Springtime is upon us, along with \"macroeconomic conditions\". :S\r\n\r\nTemplate:\r\n\r\n```\r\n**Company**:** XXXXXX\r\n\r\n**Company site:** XXXXX\r\n\r\n**Position(s):** XXXXXX\r\n\r\n**Location:** XXXXXX (please specify whether REMOTE or ONSITE)\r\n\r\n**Description:** XXXXXX\r\n\r\n**Tech stack:** XXXXXX\r\n\r\n**Compensation:** Salary, equity, vacation, major benefits.\r\n\r\n**Contact:** XXXXXX\r\n```","comments_url":"https://lobste.rs/s/68wbn5/who_s_hiring_q2fy2023","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":39846,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["job"]},{"short_id":"n95ptb","short_id_url":"https://lobste.rs/s/n95ptb","created_at":"2023-04-08T01:26:17.000-05:00","title":"WebAssembly tail calls","url":"https://v8.dev/blog/wasm-tail-call","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/n95ptb/webassembly_tail_calls","submitter_user":{"username":"jado","created_at":"2019-08-06T03:14:15.000-05:00","is_admin":false,"about":"Software Engineer, CompSci Grad Student (researching ML)\r\n\r\nloves plt, compilers, ml, rust\r\n\r\n[Website](https://jadon.io) | [GitHub](https://github.com/phase) | [LinkedIn](https://www.linkedin.com/in/jado/)","is_moderator":false,"karma":1368,"avatar_url":"/avatars/jado-100.png","invited_by_user":"BruceM","github_username":"phase"},"tags":["compilers","performance","wasm"]},{"short_id":"jaeyzk","short_id_url":"https://lobste.rs/s/jaeyzk","created_at":"2023-04-08T03:00:26.000-05:00","title":"bytebeat-rs: bytebeat written in rust","url":"https://github.com/chaosprint/bytebeat-rs","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jaeyzk/bytebeat_rs_bytebeat_written_rust","submitter_user":{"username":"chaosprint","created_at":"2022-06-09T14:52:34.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":24,"avatar_url":"/avatars/chaosprint-100.png","invited_by_user":"df"},"tags":["art","audio","c","plt","rust"]},{"short_id":"vdk44m","short_id_url":"https://lobste.rs/s/vdk44m","created_at":"2023-04-07T09:54:52.000-05:00","title":"Fx release 24.1.0","url":"https://github.com/antonmedv/fx/releases/tag/24.1.0","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vdk44m/fx_release_24_1_0","submitter_user":{"username":"antonmedv","created_at":"2018-09-20T00:46:59.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":587,"avatar_url":"/avatars/antonmedv-100.png","invited_by_user":"notriddle"},"tags":["release"]},{"short_id":"eshcdk","short_id_url":"https://lobste.rs/s/eshcdk","created_at":"2023-04-07T03:46:48.000-05:00","title":"Knit: making a better Make","url":"https://zyedidia.github.io/blog/posts/3-knit-better-make/","score":23,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eshcdk/knit_making_better_make","submitter_user":{"username":"TeddyDD","created_at":"2019-03-05T16:08:51.000-06:00","is_admin":false,"about":"visual artist / programmer","is_moderator":false,"karma":249,"avatar_url":"/avatars/TeddyDD-100.png","invited_by_user":"nomto","github_username":"TeddyDD"},"tags":["lua","programming"]},{"short_id":"llswt8","short_id_url":"https://lobste.rs/s/llswt8","created_at":"2023-04-07T14:19:38.000-05:00","title":"Database “sharding” came from UO?","url":"https://www.raphkoster.com/2009/01/08/database-sharding-came-from-uo/","score":10,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/llswt8/database_sharding_came_from_uo","submitter_user":{"username":"fs111","created_at":"2017-01-04T07:51:28.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":5072,"avatar_url":"/avatars/fs111-100.png","invited_by_user":"drdoom","github_username":"fs111","twitter_username":"fs111"},"tags":["databases","historical"]},{"short_id":"yta10o","short_id_url":"https://lobste.rs/s/yta10o","created_at":"2023-04-07T08:09:36.000-05:00","title":"knakk: free and open source godot 4 game","url":"https://github.com/raffomania/knakk","score":13,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yta10o/knakk_free_open_source_godot_4_game","submitter_user":{"username":"raffomania","created_at":"2016-07-16T09:50:16.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":41,"avatar_url":"/avatars/raffomania-100.png","invited_by_user":"svenstaro"},"tags":["games","release","show"]},{"short_id":"hy8xw1","short_id_url":"https://lobste.rs/s/hy8xw1","created_at":"2023-04-07T14:53:06.000-05:00","title":"What code constructs express team processes or code transitions?","url":"","score":10,"flags":0,"comment_count":1,"description":"\u003cp\u003eAny snapshot of a codebase likely contains code-things at different stages of life. This becomes inevitable when the codebase is huge, or it’s deployed in many places, so changing everything in one go is intractable.\u003c/p\u003e\n\u003cp\u003eSometimes, code itself can express or enforce part of the path of transition. What libraries and language features do you know that let you express that code is new, or old, or changing, and provide the right behaviour to go with it? Examples and discussion are equally welcome.\u003c/p\u003e\n\u003cp\u003eSome examples to get you going:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRuby’s \u003ca href=\"https://github.com/github/scientist\" rel=\"ugc\"\u003eScientist\u003c/a\u003e gem lets you try out a new function side-by-side with using the old function, and record differences in timing and behaviour.\u003c/li\u003e\n\u003cli\u003eSimon Hørup Eskildsen’s article on \u003ca href=\"https://sirupsen.com/shitlists\" rel=\"ugc\"\u003eShitlist Driven Development\u003c/a\u003e gives a deprecated function a whitelist, so any new callers can be headed off at the pass.\u003c/li\u003e\n\u003cli\u003eStephan Boyer’s \u003ca href=\"Typical\"\u003ehttps://github.com/stepchowfun/typical\u003c/a\u003e: implements a field type \u003ccode\u003easymmetric\u003c/code\u003e that compiles to ‘required’ for producers, but ‘optional’ for consumers. This intermediate stage lets you safely transition a field between ‘optional everywhere’ to ‘required everywhere’, without the careful staged rollouts that manual asymmetry requires.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://nitter.net/evinism/status/1338684345603657730#m\" rel=\"ugc\"\u003ethis Twitter thread on process in code\u003c/a\u003e between @evinism and \u003ca href=\"https://lobste.rs/u/hwayne\" rel=\"ugc\"\u003e@hwayne\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","description_plain":"Any snapshot of a codebase likely contains code-things at different stages of life. This becomes inevitable when the codebase is huge, or it's deployed in many places, so changing everything in one go is intractable.\r\n\r\nSometimes, code itself can express or enforce part of the path of transition. What libraries and language features do you know that let you express that code is new, or old, or changing, and provide the right behaviour to go with it? Examples and discussion are equally welcome.\r\n\r\nSome examples to get you going:\r\n- Ruby's [Scientist](https://github.com/github/scientist) gem lets you try out a new function side-by-side with using the old function, and record differences in timing and behaviour.\r\n- Simon Hørup Eskildsen's article on [Shitlist Driven Development](https://sirupsen.com/shitlists) gives a deprecated function a whitelist, so any new callers can be headed off at the pass.\r\n- Stephan Boyer's [https://github.com/stepchowfun/typical](Typical): implements a field type `asymmetric` that compiles to 'required' for producers, but 'optional' for consumers. This intermediate stage lets you safely transition a field between 'optional everywhere' to 'required everywhere', without the careful staged rollouts that manual asymmetry requires.\r\n- [this Twitter thread on process in code](https://nitter.net/evinism/status/1338684345603657730#m) between @evinism and @hwayne","comments_url":"https://lobste.rs/s/hy8xw1/what_code_constructs_express_team","submitter_user":{"username":"Sietsebb","created_at":"2017-01-03T08:32:51.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":3082,"avatar_url":"/avatars/Sietsebb-100.png","invited_by_user":"asthasr"},"tags":["ask","plt","practices"]},{"short_id":"kljwfv","short_id_url":"https://lobste.rs/s/kljwfv","created_at":"2023-04-07T17:46:05.000-05:00","title":"Release Nvim 0.9.0","url":"https://github.com/neovim/neovim/releases/tag/v0.9.0","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kljwfv/release_nvim_0_9_0","submitter_user":{"username":"cjoly","created_at":"2021-09-07T11:35:23.000-05:00","is_admin":false,"about":"###### Mastodon:\r\nhttps://fosstodon.org/@cjoly\r\n\r\nI [blog](https://cj.rs/blog?ref=lobsters-profile) mainly about [performance](https://cj.rs/tags/performance/?ref=lobsters-profile) and [tools I use](https://cj.rs/blog/my-setup?ref=lobsters-profile). You can find me in various [parts](https://cj.rs/contact/?ref=lobsters-profile#find-me-on) of the internet.\r\n\r\n------------------\r\n\r\nThis is an OpenPGP proof that connects my OpenPGP key to this Lobste.rs account. For details check out https://docs.keyoxide.org/advanced/openpgp-proofs/\r\n\r\n[Verifying my OpenPGP key: openpgp4fpr:bcc07bce9dd35b51c5b473f92ca0c9adb9747d20]\r\n\r\n","is_moderator":false,"karma":331,"avatar_url":"/avatars/cjoly-100.png","invited_by_user":"arh","github_username":"cljoly"},"tags":["release","vim"]},{"short_id":"0lkzrk","short_id_url":"https://lobste.rs/s/0lkzrk","created_at":"2023-04-07T07:38:25.000-05:00","title":"What are you doing this weekend?","url":"","score":11,"flags":0,"comment_count":10,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it’s more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it’s more than OK to do nothing at all too!","comments_url":"https://lobste.rs/s/0lkzrk/what_are_you_doing_this_weekend","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":8775,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"tags":["ask","programming"]},{"short_id":"eofxrg","short_id_url":"https://lobste.rs/s/eofxrg","created_at":"2023-04-07T14:34:38.000-05:00","title":"jank development update - Optimizing a ray tracer","url":"https://jank-lang.org/blog/2023-04-07-ray-tracing/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eofxrg/jank_development_update_optimizing_ray","submitter_user":{"username":"jeaye","created_at":"2022-08-11T18:49:43.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":9,"avatar_url":"/avatars/jeaye-100.png","invited_by_user":"technomancy"},"tags":["clojure","compilers"]},{"short_id":"cg4j5t","short_id_url":"https://lobste.rs/s/cg4j5t","created_at":"2023-04-07T11:21:08.000-05:00","title":"CAN Injection: keyless car theft","url":"https://kentindell.github.io/2023/04/03/can-injection/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cg4j5t/can_injection_keyless_car_theft","submitter_user":{"username":"GeoffWozniak","created_at":"2014-03-02T15:01:50.000-06:00","is_admin":false,"about":"Software developer, mostly interested in compilation, programming languages, and the history of software practices, particularly debugging techniques. No relation to Steve. I work on embedded system compilers.\r\n\r\n[wozniak.ca](http://wozniak.ca)\r\n","is_moderator":false,"karma":7736,"avatar_url":"/avatars/GeoffWozniak-100.png","invited_by_user":"vjoel"},"tags":["reversing","security"]},{"short_id":"adaohn","short_id_url":"https://lobste.rs/s/adaohn","created_at":"2023-04-07T11:15:07.000-05:00","title":"Making Systems Programming Accessible","url":"https://www.youtube.com/watch?v=Qncdi-Fg0-I","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/adaohn/making_systems_programming_accessible","submitter_user":{"username":"g-w1","created_at":"2021-03-13T20:03:22.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":424,"avatar_url":"/avatars/g-w1-100.png","invited_by_user":"vaibhavsagar","github_username":"g-w1"},"tags":["programming","video"]},{"short_id":"flktbx","short_id_url":"https://lobste.rs/s/flktbx","created_at":"2023-04-07T13:13:24.000-05:00","title":"Writing linter rules: why, how and when","url":"https://www.youtube.com/watch?v=zY1xDjGE7DU","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/flktbx/writing_linter_rules_why_how_when","submitter_user":{"username":"jfmengels","created_at":"2020-10-03T11:24:25.000-05:00","is_admin":false,"about":"I'm into functional programming and mostly the Elm language. I'm the author of elm-review — a static analysis tool for Elm — and the co-host of the Elm Radio podcast.","is_moderator":false,"karma":228,"avatar_url":"/avatars/jfmengels-100.png","invited_by_user":"wolfadex"},"tags":["practices","video"]},{"short_id":"9hiplp","short_id_url":"https://lobste.rs/s/9hiplp","created_at":"2023-04-07T16:36:32.000-05:00","title":"Stay mainline","url":"https://brandur.org/fragments/stay-mainline","score":5,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9hiplp/stay_mainline","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":9248,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["practices"]},{"short_id":"auj41i","short_id_url":"https://lobste.rs/s/auj41i","created_at":"2023-04-07T12:24:29.000-05:00","title":"Are your memory-bound benchmarking timings normally distributed?","url":"https://lemire.me/blog/2023/04/06/are-your-memory-bound-benchmarking-timings-normally-distributed/","score":5,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/auj41i/are_your_memory_bound_benchmarking","submitter_user":{"username":"rolisz","created_at":"2021-12-30T08:25:53.000-06:00","is_admin":false,"about":"I'm a machine learning consultant from Romania. ","is_moderator":false,"karma":19,"avatar_url":"/avatars/rolisz-100.png","invited_by_user":"cornel","github_username":"rolisz","twitter_username":"rolisz"},"tags":["performance"]},{"short_id":"aux2vz","short_id_url":"https://lobste.rs/s/aux2vz","created_at":"2023-04-07T15:34:00.000-05:00","title":"Modern cars, touch interfaces - Highway to Hell","url":"https://www.dedoimedo.com/life/cars-touch.html","score":2,"flags":1,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aux2vz/modern_cars_touch_interfaces_highway","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":20130,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["a11y","design","hardware"]},{"short_id":"b0fkuh","short_id_url":"https://lobste.rs/s/b0fkuh","created_at":"2023-04-06T11:40:51.000-05:00","title":"Build faster with Buck2: Our open source build system","url":"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/","score":54,"flags":0,"comment_count":32,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b0fkuh/build_faster_with_buck2_our_open_source","submitter_user":{"username":"brianhicks","created_at":"2014-05-23T15:49:32.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":364,"avatar_url":"/avatars/brianhicks-100.png","invited_by_user":"jm"},"tags":["release"]},{"short_id":"fzxmgc","short_id_url":"https://lobste.rs/s/fzxmgc","created_at":"2023-04-07T13:07:43.000-05:00","title":"meeting-concluder: Record audio from a meeting, then transcribe, conclude and send the conclusion and a piece of advice to Slack","url":"https://github.com/schibsted/meeting-concluder","score":3,"flags":0,"comment_count":0,"description":"\u003cp\u003eThis is a fun little prototype that can:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRecord short meetings.\u003c/li\u003e\n\u003cli\u003eTranscribe the audio using the OpenAI transcription API.\u003c/li\u003e\n\u003cli\u003eCreate a summary, conclusion and a piece of advice, using another OpenAI API.\u003c/li\u003e\n\u003cli\u003eSend the summary to a Slack channel of your choosing, with the click of a button.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt comes with a friendly web interface. Recordings can be stopped by clapping twice, \u003cstrong\u003eHARD\u003c/strong\u003e.\u003c/p\u003e\n","description_plain":"This is a fun little prototype that can:\r\n\r\n* Record short meetings.\r\n* Transcribe the audio using the OpenAI transcription API.\r\n* Create a summary, conclusion and a piece of advice, using another OpenAI API.\r\n* Send the summary to a Slack channel of your choosing, with the click of a button.\r\n\r\nIt comes with a friendly web interface. Recordings can be stopped by clapping twice, **HARD**.","comments_url":"https://lobste.rs/s/fzxmgc/meeting_concluder_record_audio_from","submitter_user":{"username":"xyproto","created_at":"2017-06-19T12:35:53.000-05:00","is_admin":false,"about":"Software Developer, Arch Linux package maintainer, Go/C/Python/C++ developer and open source enthusiast. Likes the game of Go as well.","is_moderator":false,"karma":1063,"avatar_url":"/avatars/xyproto-100.png","invited_by_user":"crazyloglad","github_username":"xyproto","twitter_username":"xyproto"},"tags":["go","practices"]},{"short_id":"j9sw4z","short_id_url":"https://lobste.rs/s/j9sw4z","created_at":"2023-04-07T11:28:16.000-05:00","title":"Creating a MPRIS server in Go","url":"https://ducng.github.io/posts/mpris/","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/j9sw4z/creating_mpris_server_go","submitter_user":{"username":"jeanthomas","created_at":"2021-12-14T12:53:17.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":287,"avatar_url":"/avatars/jeanthomas-100.png","invited_by_user":"brainstorm","github_username":"jeanthom"},"tags":["audio","go"]},{"short_id":"qax9ju","short_id_url":"https://lobste.rs/s/qax9ju","created_at":"2023-04-06T23:34:51.000-05:00","title":"Writing a Fast C# Code-Search Tool in Rust","url":"https://johnaustin.io/articles/2022/blazing-fast-structural-search-for-c-sharp-in-rust","score":8,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/qax9ju/writing_fast_c_code_search_tool_rust","submitter_user":{"username":"john_austin","created_at":"2021-07-30T12:03:47.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":38,"avatar_url":"/avatars/john_austin-100.png","invited_by_user":"nuno_leiria"},"tags":["dotnet","rust"]},{"short_id":"lbxjov","short_id_url":"https://lobste.rs/s/lbxjov","created_at":"2023-04-07T06:21:46.000-05:00","title":"Custom allocators in Rust","url":"https://nical.github.io/posts/rust-custom-allocators.html","score":9,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lbxjov/custom_allocators_rust","submitter_user":{"username":"jakob","created_at":"2018-03-02T15:45:42.000-06:00","is_admin":false,"about":"Website: \u003chttp://jakob.space\u003e\r\n\r\nActivityPub: \u003chttps://social.jakob.space/jakob\u003e","is_moderator":false,"karma":873,"avatar_url":"/avatars/jakob-100.png","invited_by_user":"calvin","github_username":"TsarFox"},"tags":["rust"]},{"short_id":"z9yaxq","short_id_url":"https://lobste.rs/s/z9yaxq","created_at":"2023-04-06T18:22:32.000-05:00","title":"HPC is dying, and MPI is killing it (2015)","url":"https://www.dursi.ca/post/hpc-is-dying-and-mpi-is-killing-it","score":17,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z9yaxq/hpc_is_dying_mpi_is_killing_it_2015","submitter_user":{"username":"safinaskar","created_at":"2022-09-06T04:32:17.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":118,"avatar_url":"/avatars/safinaskar-100.png","invited_by_user":"pushcx"},"tags":["distributed","scaling","science"]},{"short_id":"6sllng","short_id_url":"https://lobste.rs/s/6sllng","created_at":"2023-04-06T13:49:23.000-05:00","title":"Inlining SVGs for Dark Mode","url":"https://ahelwer.ca/post/2023-04-06-dark-mode/","score":18,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6sllng/inlining_svgs_for_dark_mode","submitter_user":{"username":"ahelwer","created_at":"2014-05-14T14:22:54.000-05:00","is_admin":false,"about":"Independent software engineering consultant focused on formal methods, distributed systems, and quantum computing. TLA+ enthusiast!","is_moderator":false,"karma":728,"avatar_url":"/avatars/ahelwer-100.png","invited_by_user":"cbilson","github_username":"ahelwer"},"tags":["css"]}]