[{"short_id":"cksldq","short_id_url":"https://lobste.rs/s/cksldq","created_at":"2023-11-08T06:53:42.000-06:00","title":"Hare aims to become a 100-year programming language","url":"https://harelang.org/blog/2023-11-08-100-year-language/","score":26,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/cksldq/hare_aims_become_100_year_programming","submitter_user":{"username":"gmem","created_at":"2021-02-05T16:55:24.000-06:00","is_admin":false,"about":"kubernetes and infrastructure fuckery being performed by a blue haired golden retriever","is_moderator":false,"karma":814,"avatar_url":"/avatars/gmem-100.png","invited_by_user":"Slackwise","github_username":"gmemstr"},"tags":["programming"]},{"short_id":"jpnas8","short_id_url":"https://lobste.rs/s/jpnas8","created_at":"2023-11-08T07:38:25.000-06:00","title":"Review: ZSA Voyager Ergonomic Keyboard","url":"https://danieldk.eu/Posts/2023-11-07-ZSA-Voyager","score":12,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jpnas8/review_zsa_voyager_ergonomic_keyboard","submitter_user":{"username":"danieldk","created_at":"2015-04-07T14:06:28.000-05:00","is_admin":false,"about":"Computational linguistics (parsing, generation, neural networks) and macOS/Fedora user.\r\n\r\nFeel free to drop me an e-mail.\r\n\r\nhttp://danieldk.eu/\r\n\r\nFollow me on Mastodon: https://sigmoid.social/web/@danieldk","is_moderator":false,"karma":3304,"avatar_url":"/avatars/danieldk-100.png","invited_by_user":"trousers","github_username":"danieldk","twitter_username":"danieldekok"},"tags":["hardware"]},{"short_id":"krmdls","short_id_url":"https://lobste.rs/s/krmdls","created_at":"2023-11-08T04:54:09.000-06:00","title":"Don't disable buttons","url":"https://gomakethings.com/dont-disable-buttons/","score":15,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/krmdls/don_t_disable_buttons","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":24094,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["a11y","javascript","web"]},{"short_id":"jg9pvu","short_id_url":"https://lobste.rs/s/jg9pvu","created_at":"2023-11-07T17:54:12.000-06:00","title":"Article 45 Will Roll Back Web Security by 12 Years","url":"https://www.eff.org/deeplinks/2023/11/article-45-will-roll-back-web-security-12-years","score":56,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jg9pvu/article_45_will_roll_back_web_security_by","submitter_user":{"username":"BenjaminRi","created_at":"2019-11-02T16:16:17.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1475,"avatar_url":"/avatars/BenjaminRi-100.png","invited_by_user":"gerikson"},"tags":["security","web"]},{"short_id":"8ktols","short_id_url":"https://lobste.rs/s/8ktols","created_at":"2023-11-07T14:19:10.000-06:00","title":"A better explanation of the Liskov Substitution Principle","url":"https://www.hillelwayne.com/post/lsp/","score":27,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/8ktols/better_explanation_liskov_substitution","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":28455,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne"},"tags":["education","practices"]},{"short_id":"p5sxde","short_id_url":"https://lobste.rs/s/p5sxde","created_at":"2023-11-08T01:45:26.000-06:00","title":"command-not-found.com","url":"https://command-not-found.com/","score":11,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p5sxde/command_not_found_com","submitter_user":{"username":"arischow","created_at":"2022-05-26T10:46:35.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":47,"avatar_url":"/avatars/arischow-100.png","invited_by_user":"feoh","github_username":"arischow","twitter_username":"ManhoChow"},"tags":["linux"]},{"short_id":"mxwit7","short_id_url":"https://lobste.rs/s/mxwit7","created_at":"2023-11-08T10:19:21.000-06:00","title":"Link-time optimisation (LTO)","url":"https://convolv.es/guides/lto/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mxwit7/link_time_optimisation_lto","submitter_user":{"username":"jryans","created_at":"2014-04-15T02:49:29.000-05:00","is_admin":false,"about":"I enjoy building tools as part of a community that empowers domain experts to control and modify their digital workflows by tearing down the boundaries typically imposed by siloed applications from different vendors.\r\n\r\nI am organising the [Malleable Systems Collective](https://malleable.systems/), a community that catalogs and experiments with malleable software and systems.\r\n\r\nI am researching reliable debugging and malleable software with [Dr. Stephen Kell](https://www.humprog.org/~stephen/) at King‚Äôs College London.\r\n\r\nI previously worked at Element building open, decentralized, secure communications for all via Matrix. I also worked at Mozilla on developer tools for Firefox, and I overhauled the Firefox CSS system using Rust and tech from Servo.\r\n\r\nHe/him","is_moderator":false,"karma":779,"avatar_url":"/avatars/jryans-100.png","invited_by_user":"kawera"},"tags":["compilers"]},{"short_id":"12t1by","short_id_url":"https://lobste.rs/s/12t1by","created_at":"2023-11-08T06:40:34.000-06:00","title":"Find and Replace Code at AST-level with Semgrep","url":"https://www.1a-insec.net/blog/21-semgrep-search-ast/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/12t1by/find_replace_code_at_ast_level_with","submitter_user":{"username":"iacore","created_at":"2023-08-03T08:31:58.000-05:00","is_admin":false,"about":":n","is_moderator":false,"karma":84,"avatar_url":"/avatars/iacore-100.png","invited_by_user":"eBPF"},"tags":["programming"]},{"short_id":"fyvn6j","short_id_url":"https://lobste.rs/s/fyvn6j","created_at":"2023-11-08T08:24:37.000-06:00","title":"Scheme WASM Tail Call Situation","url":"https://gist.github.com/rain-1/20329ae349a866b29aa1a37eb8a4a88c","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fyvn6j/scheme_wasm_tail_call_situation","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":6668,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["compilers","programming","wasm"]},{"short_id":"docl56","short_id_url":"https://lobste.rs/s/docl56","created_at":"2023-11-08T04:59:16.000-06:00","title":"Surprising Facts About New CSS Selectors","url":"https://cloudfour.com/thinks/surprising-facts-about-new-css-selectors/","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/docl56/surprising_facts_about_new_css_selectors","submitter_user":{"username":"adamshaylor","created_at":"2020-10-26T20:04:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2741,"avatar_url":"/avatars/adamshaylor-100.png","invited_by_user":"peterc","github_username":"adamshaylor","keybase_signatures":[{"kb_username":"adamshaylor","sig_hash":"0ebd1a3d88d97f20922147a75889dfcae02b632d94156b9315a6d93384ae2e4f0f"}]},"tags":["css"]},{"short_id":"tbchou","short_id_url":"https://lobste.rs/s/tbchou","created_at":"2023-11-07T10:10:02.000-06:00","title":"A four year plan for async Rust","url":"https://without.boats/blog/a-four-year-plan/","score":35,"flags":0,"comment_count":12,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/tbchou/four_year_plan_for_async_rust","submitter_user":{"username":"jado","created_at":"2019-08-06T03:14:15.000-05:00","is_admin":false,"about":"engineer. loves plt, compilers, ml, rust","is_moderator":false,"karma":1913,"avatar_url":"/avatars/jado-100.png","invited_by_user":"BruceM","github_username":"phase","twitter_username":"jadopoly"},"tags":["rust"]},{"short_id":"rbyntg","short_id_url":"https://lobste.rs/s/rbyntg","created_at":"2023-11-07T17:10:01.000-06:00","title":"What If We Don't Pop the Stack? The Return of 2nd-Class Values","url":"https://www.cs.purdue.edu/homes/rompf/papers/xhebraj-ecoop22.pdf","score":15,"flags":0,"comment_count":10,"description":"\u003cp\u003eAbstract:\nUsing a stack for managing the local state of procedures as popularized by Algol is a simple but\neffective way to achieve a primitive form of automatic memory management. Hence, the call stack\nremains the backbone of most programming language runtimes to the present day. However, the\nappealing simplicity of the call stack model comes at the price of strictly enforced limitations: since\nevery function return pops the stack, it is difficult to return stack-allocated data from a callee\nupwards to its caller‚Äîespecially variable-size data such as closures.\u003c/p\u003e\n\u003cp\u003eThis paper proposes a solution by introducing a small tweak to the usual stack semantics. We\ndesign a type system that tracks the underlying storage mode of values, and when a function returns\na stack-allocated value, we just don‚Äôt pop the stack! Instead, the stack frame is de-allocated together\nwith a parent the next time a heap-allocated value or primitive is returned. We identify a range of\nuse cases where this delayed-popping strategy is beneficial, ranging from closures to trait objects to\nother types of variable-size data. Our evaluation shows that this execution model reduces heap and\nGC pressure and recovers spatial locality of programs improving execution time between 10% and\n25% with respect to standard execution.\u003c/p\u003e\n","description_plain":"Abstract:\r\nUsing a stack for managing the local state of procedures as popularized by Algol is a simple but\r\neffective way to achieve a primitive form of automatic memory management. Hence, the call stack\r\nremains the backbone of most programming language runtimes to the present day. However, the\r\nappealing simplicity of the call stack model comes at the price of strictly enforced limitations: since\r\nevery function return pops the stack, it is difficult to return stack-allocated data from a callee\r\nupwards to its caller‚Äîespecially variable-size data such as closures.\r\n\r\nThis paper proposes a solution by introducing a small tweak to the usual stack semantics. We\r\ndesign a type system that tracks the underlying storage mode of values, and when a function returns\r\na stack-allocated value, we just don‚Äôt pop the stack! Instead, the stack frame is de-allocated together\r\nwith a parent the next time a heap-allocated value or primitive is returned. We identify a range of\r\nuse cases where this delayed-popping strategy is beneficial, ranging from closures to trait objects to\r\nother types of variable-size data. Our evaluation shows that this execution model reduces heap and\r\nGC pressure and recovers spatial locality of programs improving execution time between 10% and\r\n25% with respect to standard execution.","comments_url":"https://lobste.rs/s/rbyntg/what_if_we_don_t_pop_stack_return_2nd_class","submitter_user":{"username":"asb","created_at":"2014-04-01T04:39:53.000-05:00","is_admin":false,"about":"Compiler engineer at Igalia (https://igalia.com). Previously co-founded lowRISC CIC (https://www.lowrisc.org) and served as its CTO for many years.\r\n\r\nWrites LLVM Weekly (https://llvmweekly.org).","is_moderator":false,"karma":389,"avatar_url":"/avatars/asb-100.png","invited_by_user":"kev009","github_username":"asb"},"tags":["pdf","plt"]},{"short_id":"5hjzj1","short_id_url":"https://lobste.rs/s/5hjzj1","created_at":"2023-11-08T03:51:08.000-06:00","title":"Simplex chat notifications with Syndicated Actors","url":"https://spam.works/users/emery/simplex_notifications.gmi","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5hjzj1/simplex_chat_notifications_with","submitter_user":{"username":"emery","created_at":"2020-05-13T08:16:18.000-05:00","is_admin":false,"about":"Unix apostate","is_moderator":false,"karma":303,"avatar_url":"/avatars/emery-100.png","invited_by_user":"ilmu","github_username":"ehmry"},"tags":["osdev"]},{"short_id":"z7rc9e","short_id_url":"https://lobste.rs/s/z7rc9e","created_at":"2023-11-08T08:17:40.000-06:00","title":"Demystifying function parameters in Go","url":"https://www.alexedwards.net/blog/demystifying-function-parameters-in-go","score":2,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z7rc9e/demystifying_function_parameters_go","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":14807,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["go"]},{"short_id":"c1smbg","short_id_url":"https://lobste.rs/s/c1smbg","created_at":"2023-11-07T17:50:31.000-06:00","title":"Go, Containers, and the Linux Scheduler","url":"https://www.riverphillips.dev/blog/go-cfs/","score":13,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/c1smbg/go_containers_linux_scheduler","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":7911,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["go"]},{"short_id":"itwqcp","short_id_url":"https://lobste.rs/s/itwqcp","created_at":"2023-11-07T09:20:50.000-06:00","title":"Sorry Computer, You're Not a Teapot","url":"https://thehistoryoftheweb.com/im-a-teapot/","score":23,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/itwqcp/sorry_computer_you_re_not_teapot","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":14807,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["historical","web"]},{"short_id":"3uypmw","short_id_url":"https://lobste.rs/s/3uypmw","created_at":"2023-11-07T18:07:23.000-06:00","title":"ReactOS Late 2023 news","url":"https://reactos.org/blogs/newsletter-103/","score":12,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3uypmw/reactos_late_2023_news","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":100259,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["osdev","windows"]},{"short_id":"zbngh3","short_id_url":"https://lobste.rs/s/zbngh3","created_at":"2023-11-08T07:58:23.000-06:00","title":"Search across a half million git repos","url":"https://grep.app","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zbngh3/search_across_half_million_git_repos","submitter_user":{"username":"hwj","created_at":"2019-05-30T00:12:36.000-05:00","is_admin":false,"about":"\r\n","is_moderator":false,"karma":1114,"avatar_url":"/avatars/hwj-100.png","invited_by_user":"nickpsecurity"},"tags":["programming"]},{"short_id":"v2nlk0","short_id_url":"https://lobste.rs/s/v2nlk0","created_at":"2023-11-08T02:07:29.000-06:00","title":"A Fistful of Automata","url":"https://iagoleal.com/posts/automata-monads/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/v2nlk0/fistful_automata","submitter_user":{"username":"crmsnbleyd","created_at":"2023-08-30T03:52:35.000-05:00","is_admin":false,"about":"Church of Emacs \\o/  \r\n[Verifying keyoxide key: $2a$11$L69Com5rsgZI4..Ujl8EoOMOfY5yApV6aixQU4LTHgmZMLmLEQz.q]","is_moderator":false,"karma":147,"avatar_url":"/avatars/crmsnbleyd-100.png","invited_by_user":"WilhelmVonWeiner"},"tags":["compsci","haskell"]},{"short_id":"eodvin","short_id_url":"https://lobste.rs/s/eodvin","created_at":"2023-11-07T17:14:38.000-06:00","title":"How Database Tricks Sped up Rust Linting Over 2000x","url":"https://www.youtube.com/watch?v=Fqo8r4bInsk","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/eodvin/how_database_tricks_sped_up_rust_linting","submitter_user":{"username":"predrag","created_at":"2022-08-30T12:00:46.000-05:00","is_admin":false,"about":"Building Trustfall, a query engine able to query any dataset. ([GitHub](https://github.com/obi1kenobi/trustfall), [conf talk](https://www.hytradboi.com/2022/how-to-query-almost-everything), [web demo](https://play.predr.ag/hackernews))\r\n\r\nCreator of `cargo-semver-checks`, a linter for semantic versioning of Rust crates: [crates.io](https://crates.io/crates/cargo-semver-checks), [GitHub](https://github.com/obi1kenobi/cargo-semver-checks)\r\n\r\nBlog: https://predr.ag/blog/\r\n\r\nMastodon: `@predrag@hachyderm.io`\r\n\r\nTwitter: https://twitter.com/PredragGruevski\r\n\r\nTalks: https://predr.ag/talks/","is_moderator":false,"karma":346,"avatar_url":"/avatars/predrag-100.png","invited_by_user":"hwayne","github_username":"obi1kenobi"},"tags":["databases","rust","testing","video"]},{"short_id":"0sjl92","short_id_url":"https://lobste.rs/s/0sjl92","created_at":"2023-11-08T10:19:19.000-06:00","title":"How updating your Yocto layers can go wrong","url":"https://mind.be/updating-yocto-layers/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/0sjl92/how_updating_your_yocto_layers_can_go","submitter_user":{"username":"jmiven","created_at":"2014-04-27T18:35:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1466,"avatar_url":"/avatars/jmiven-100.png","invited_by_user":"kev009","github_username":"jmiven"},"tags":["programming"]},{"short_id":"ddtoey","short_id_url":"https://lobste.rs/s/ddtoey","created_at":"2023-11-07T23:43:54.000-06:00","title":"What the QWAC?","url":"https://scotthelme.co.uk/what-the-qwac/","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ddtoey/what_qwac","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":24094,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["security"]},{"short_id":"otgffj","short_id_url":"https://lobste.rs/s/otgffj","created_at":"2023-11-07T06:37:47.000-06:00","title":"Reducing Raspberry Pi 5's standby power consumption by 140x","url":"https://www.jeffgeerling.com/blog/2023/reducing-raspberry-pi-5s-power-consumption-140x","score":19,"flags":1,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/otgffj/reducing_raspberry_pi_5_s_standby_power","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":24094,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["hardware"]},{"short_id":"yctw7m","short_id_url":"https://lobste.rs/s/yctw7m","created_at":"2023-11-08T09:19:01.000-06:00","title":"Calculating a Smooth Clock Hands Animation","url":"http://david-smith.org/blog/2023/11/06/design-notes-46/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/yctw7m/calculating_smooth_clock_hands","submitter_user":{"username":"ehamberg","created_at":"2014-08-18T02:47:08.000-05:00","is_admin":false,"about":"https://keybase.io/eh","is_moderator":false,"karma":3790,"avatar_url":"/avatars/ehamberg-100.png","invited_by_user":"oleavr"},"tags":["graphics","swift"]},{"short_id":"ifoyxj","short_id_url":"https://lobste.rs/s/ifoyxj","created_at":"2023-11-08T07:42:26.000-06:00","title":"Don't Trust Your Profiler","url":"https://stefan-marr.de/downloads/mplr23-burchell-et-al-dont-trust-your-profiler.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ifoyxj/don_t_trust_your_profiler","submitter_user":{"username":"hyperpape","created_at":"2016-06-30T19:22:53.000-05:00","is_admin":false,"about":"Into goofy hacks, optimization, compilers, and also everything else under the sun. I sometimes post my notes at https://justinblank.com.","is_moderator":false,"karma":1969,"avatar_url":"/avatars/hyperpape-100.png","invited_by_user":"telemachus","github_username":"hyperpape"},"tags":["java","pdf","performance"]}]