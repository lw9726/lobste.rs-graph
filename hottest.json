[{"short_id":"jcvjh3","short_id_url":"https://lobste.rs/s/jcvjh3","created_at":"2023-01-03T08:04:42.000-06:00","title":"Debian has removed Python 2 from its next version","url":"https://utcc.utoronto.ca/~cks/space/blog/python/DebianNoMorePython2","score":24,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jcvjh3/debian_has_removed_python_2_from_its_next","submitter_user":{"username":"Vaelatern","created_at":"2017-11-21T12:33:02.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2760,"avatar_url":"/avatars/Vaelatern-100.png","invited_by_user":"duncaen"},"tags":["python"]},{"short_id":"9lfkmv","short_id_url":"https://lobste.rs/s/9lfkmv","created_at":"2023-01-03T09:29:06.000-06:00","title":"Zero-dependency random number generation in Rust","url":"https://blog.orhun.dev/zero-deps-random-in-rust/","score":7,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9lfkmv/zero_dependency_random_number","submitter_user":{"username":"orhun","created_at":"2022-04-16T17:58:30.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":57,"avatar_url":"/avatars/orhun-100.png","invited_by_user":"extrawurst"},"tags":["linux","rust","unix"]},{"short_id":"p01m42","short_id_url":"https://lobste.rs/s/p01m42","created_at":"2023-01-03T09:57:40.000-06:00","title":"You Want Modules, Not Microservices","url":"https://blogs.newardassociates.com/blog/2023/you-want-modules-not-microservices.html","score":12,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/p01m42/you_want_modules_not_microservices","submitter_user":{"username":"ptman","created_at":"2017-06-07T09:22:20.000-05:00","is_admin":false,"about":"https://paul.totterman.name/","is_moderator":false,"karma":974,"avatar_url":"/avatars/ptman-100.png","invited_by_user":"lau","github_username":"ptman","twitter_username":"ptotterm"},"tags":["programming"]},{"short_id":"uslf4h","short_id_url":"https://lobste.rs/s/uslf4h","created_at":"2023-01-03T10:50:58.000-06:00","title":"A confusing lifetime error related to Rust's lifetime elision","url":"https://ntietz.com/blog/confusing-rust-lifetime-elision/","score":6,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uslf4h/confusing_lifetime_error_related_rust_s","submitter_user":{"username":"ntietz","created_at":"2020-08-29T08:20:52.000-05:00","is_admin":false,"about":"I'm a software engineer who focuses on scalable systems and product engineering for things that make the world a better place. Keenly interested in systems programming. Cherry Blues. Python. Rust.\r\n\r\nHomepage is [ntietz.com](https://ntietz.com).","is_moderator":false,"karma":208,"avatar_url":"/avatars/ntietz-100.png","invited_by_user":"kzisme"},"tags":["rust"]},{"short_id":"6fktsk","short_id_url":"https://lobste.rs/s/6fktsk","created_at":"2023-01-02T15:54:04.000-06:00","title":"weathering software winter","url":"https://100r.co/site/weathering_software_winter.html","score":49,"flags":0,"comment_count":18,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6fktsk/weathering_software_winter","submitter_user":{"username":"knl","created_at":"2017-07-21T07:12:24.000-05:00","is_admin":false,"about":"Senior software engineer specialized in distributed systems and low latency, high frequency trading infrastructure.","is_moderator":false,"karma":5998,"avatar_url":"/avatars/knl-100.png","invited_by_user":"james","github_username":"knl","keybase_signatures":[{"kb_username":"knl","sig_hash":"cb1fe17fead6d360f9abca902132b2407ee736f1a243f615ad9757dfe8d17e3b0f"}]},"tags":["practices"]},{"short_id":"99hlhq","short_id_url":"https://lobste.rs/s/99hlhq","created_at":"2023-01-03T07:42:06.000-06:00","title":"bflat - C# as you know it but with Go-inspired tooling","url":"https://flattened.net/","score":9,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/99hlhq/bflat_c_as_you_know_it_with_go_inspired","submitter_user":{"username":"akselmo","created_at":"2022-04-22T05:47:06.000-05:00","is_admin":false,"about":"Design engineer by day, hobbyist gamedev by night.\r\n\r\nFediverse: https://tilde.zone/@aks (I do not have twitter)\r\n\r\nGit: https://codeberg.org/akselmo (I use this more than Github)\r\n\r\nGames: https://akselmo.itch.io\r\n\r\n----\r\n\r\nThis is an OpenPGP proof that connects my OpenPGP key to this Lobste.rs account. For details check out https://docs.keyoxide.org/advanced/openpgp-proofs/\r\n\r\n[Verifying my OpenPGP key: openpgp4fpr:6CF8BBBD93FD0A4A748495A12D8ADFDD01E76FAC]","is_moderator":false,"karma":404,"avatar_url":"/avatars/akselmo-100.png","invited_by_user":"kline","github_username":"Akselmo"},"tags":["dotnet","programming"]},{"short_id":"gxszoc","short_id_url":"https://lobste.rs/s/gxszoc","created_at":"2023-01-03T09:43:35.000-06:00","title":"Who's Hiring? Q1Y2023","url":"","score":10,"flags":0,"comment_count":2,"description":"\u003cp\u003eHope everyone had happy holidays! A new year and new prospects.\u003c/p\u003e\n\u003cp\u003eTemplate:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e**Company**:** XXXXXX\n\n**Company site:** XXXXX\n\n**Position(s):** XXXXXX\n\n**Location:** XXXXXX (please specify whether REMOTE or ONSITE)\n\n**Description:** XXXXXX\n\n**Tech stack:** XXXXXX\n\n**Compensation:** Salary, equity, vacation, major benefits.\n\n**Contact:** XXXXXX\n\u003c/code\u003e\u003c/pre\u003e\n","description_plain":"Hope everyone had happy holidays! A new year and new prospects.\r\n\r\nTemplate:\r\n```\r\n**Company**:** XXXXXX\r\n\r\n**Company site:** XXXXX\r\n\r\n**Position(s):** XXXXXX\r\n\r\n**Location:** XXXXXX (please specify whether REMOTE or ONSITE)\r\n\r\n**Description:** XXXXXX\r\n\r\n**Tech stack:** XXXXXX\r\n\r\n**Compensation:** Salary, equity, vacation, major benefits.\r\n\r\n**Contact:** XXXXXX\r\n```","comments_url":"https://lobste.rs/s/gxszoc/who_s_hiring_q1y2023","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":39196,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["job"]},{"short_id":"zz7qij","short_id_url":"https://lobste.rs/s/zz7qij","created_at":"2023-01-02T20:07:40.000-06:00","title":"Introducing Austral: A Systems Language with Linear Types and Capabilities","url":"https://borretti.me/article/introducing-austral","score":32,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zz7qij/introducing_austral_systems_language","submitter_user":{"username":"joakin","created_at":"2014-04-16T08:57:11.000-05:00","is_admin":false,"about":"chimeces.com/about","is_moderator":false,"karma":148,"avatar_url":"/avatars/joakin-100.png","invited_by_user":"kawera"},"tags":["plt"]},{"short_id":"ztaskf","short_id_url":"https://lobste.rs/s/ztaskf","created_at":"2023-01-03T11:26:00.000-06:00","title":"Writing a Python SQL engine from scratch","url":"https://github.com/tobymao/sqlglot/blob/main/posts/python_sql_engine.md","score":5,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ztaskf/writing_python_sql_engine_from_scratch","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"eatonphil.com","is_moderator":false,"karma":4541,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"phil_eaton"},"tags":["databases","python"]},{"short_id":"ez1shl","short_id_url":"https://lobste.rs/s/ez1shl","created_at":"2023-01-02T23:06:11.000-06:00","title":"The infrastructure behind ATMs","url":"https://www.bitsaboutmoney.com/archive/the-infrastructure-behind-atms/","score":17,"flags":3,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ez1shl/infrastructure_behind_atms","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":39196,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["finance"]},{"short_id":"xu9atj","short_id_url":"https://lobste.rs/s/xu9atj","created_at":"2023-01-03T09:46:10.000-06:00","title":"Incremental compilation for Crystal - Part 1","url":"https://dev.to/asterite/incremental-compilation-for-crystal-part-1-414k","score":3,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xu9atj/incremental_compilation_for_crystal","submitter_user":{"username":"jmiven","created_at":"2014-04-27T18:35:23.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1202,"avatar_url":"/avatars/jmiven-100.png","invited_by_user":"kev009","github_username":"jmiven"},"tags":["compilers","plt"]},{"short_id":"oz3pyi","short_id_url":"https://lobste.rs/s/oz3pyi","created_at":"2023-01-03T02:39:01.000-06:00","title":"26 programming languages in 25 days, Part 2: Reflections on language design","url":"https://matt.might.net/articles/26-languages-part2/","score":12,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oz3pyi/26_programming_languages_25_days_part_2","submitter_user":{"username":"azhenley","created_at":"2021-10-04T14:03:32.000-05:00","is_admin":false,"about":"I work on dev tools at Microsoft. Former professor at University of Tennessee.\r\n\r\nhttp://austinhenley.com","is_moderator":false,"karma":791,"avatar_url":"/avatars/azhenley-100.png","invited_by_user":"eatonphil"},"tags":["plt"]},{"short_id":"flzfti","short_id_url":"https://lobste.rs/s/flzfti","created_at":"2023-01-03T09:36:20.000-06:00","title":"Complexity Zoo","url":"https://complexityzoo.net/Complexity_Zoo","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/flzfti/complexity_zoo","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":24914,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["compsci","math"]},{"short_id":"oyrydm","short_id_url":"https://lobste.rs/s/oyrydm","created_at":"2023-01-03T14:20:28.000-06:00","title":"It is not what you expect, but it is what you want: how Data#initialize is designed","url":"https://zverok.space/blog/2023-01-03-data-initialize.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/oyrydm/it_is_not_what_you_expect_it_is_what_you_want","submitter_user":{"username":"zverok","created_at":"2021-01-07T04:42:39.000-06:00","is_admin":false,"about":"Ruby, writer, open data, open-source.\r\n\r\nhttps://zverok.space","is_moderator":false,"karma":498,"avatar_url":"/avatars/zverok-100.png","invited_by_user":"mt"},"tags":["plt","ruby"]},{"short_id":"hmgqii","short_id_url":"https://lobste.rs/s/hmgqii","created_at":"2023-01-02T05:15:12.000-06:00","title":"How many layers of UI inconsistencies are in Windows 11?","url":"https://ntdotdev.wordpress.com/2023/01/01/state-of-the-windows-how-many-layers-of-ui-inconsistencies-are-in-windows-11/","score":54,"flags":2,"comment_count":29,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hmgqii/how_many_layers_ui_inconsistencies_are","submitter_user":{"username":"serhack","created_at":"2020-07-21T09:01:02.000-05:00","is_admin":false,"about":"Security Researcher","is_moderator":false,"karma":202,"avatar_url":"/avatars/serhack-100.png","invited_by_user":"asymptotically"},"tags":["windows"]},{"short_id":"owyoac","short_id_url":"https://lobste.rs/s/owyoac","created_at":"2023-01-02T17:27:57.000-06:00","title":"Releasing cargo-sandbox, a sandboxed wrapper around cargo","url":"https://github.com/insanitybit/cargo-sandbox/","score":8,"flags":0,"comment_count":8,"description":"\u003cp\u003e\u003ca href=\"https://github.com/insanitybit/cargo-sandbox\" rel=\"ugc\"\u003ehttps://github.com/insanitybit/cargo-sandbox\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ecargo-sandbox intends to be a near drop-in replacement for cargo. The key difference is that cargo-sandbox runs commands in a docker container, with the goal of isolating potentially malicious code from the rest of your host environment (see the README for more details on the threat model).\u003c/p\u003e\n\u003cp\u003eThe goal is to be as close to ‘100%’ compatible, with the smoothest possible experience as possible. For example, one issue with running in containers is with regards to binary dependencies - for this, I’m hoping to leverage riff (\u003ca href=\"https://determinate.systems/posts/introducing-riff\" rel=\"ugc\"\u003ehttps://determinate.systems/posts/introducing-riff\u003c/a\u003e) to give you a better-than-native experience while also being safer than default. Unless a build script is doing something truly horrendous I want the out-of-the-box experience to be as good or better than native.\u003c/p\u003e\n\u003cp\u003eIt’s very early days so understand that things may not be implemented yet. See the issue tracker for more info. Feel free to ask questions or provide feedback, that’s why I’m posting it at this early stage. I intend to fix up the implementation to suck a bit less but the basic approach is more or less what I intend to continue forward with.\u003c/p\u003e\n","description_plain":"https://github.com/insanitybit/cargo-sandbox\r\n\r\ncargo-sandbox intends to be a near drop-in replacement for cargo. The key difference is that cargo-sandbox runs commands in a docker container, with the goal of isolating potentially malicious code from the rest of your host environment (see the README for more details on the threat model).\r\n\r\nThe goal is to be as close to '100%' compatible, with the smoothest possible experience as possible. For example, one issue with running in containers is with regards to binary dependencies - for this, I'm hoping to leverage riff (https://determinate.systems/posts/introducing-riff) to give you a better-than-native experience while also being safer than default. Unless a build script is doing something truly horrendous I want the out-of-the-box experience to be as good or better than native.\r\n\r\nIt's very early days so understand that things may not be implemented yet. See the issue tracker for more info. Feel free to ask questions or provide feedback, that's why I'm posting it at this early stage. I intend to fix up the implementation to suck a bit less but the basic approach is more or less what I intend to continue forward with.","comments_url":"https://lobste.rs/s/owyoac/releasing_cargo_sandbox_sandboxed","submitter_user":{"username":"insanitybit","created_at":"2020-08-13T22:32:02.000-05:00","is_admin":false,"about":"@insanitybit\r\n@graplsec","is_moderator":false,"karma":20,"avatar_url":"/avatars/insanitybit-100.png","invited_by_user":"morris"},"tags":["rust","security","show"]},{"short_id":"jpm5iw","short_id_url":"https://lobste.rs/s/jpm5iw","created_at":"2023-01-03T10:21:21.000-06:00","title":"x86 is Turing-complete with no registers","url":"https://mainisusuallyafunction.blogspot.com/2014/02/x86-is-turing-complete-with-no-registers.html","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/jpm5iw/x86_is_turing_complete_with_no_registers","submitter_user":{"username":"unbalancedparentheses","created_at":"2014-06-21T15:40:39.000-05:00","is_admin":false,"about":"I am a developer that loves building distributed systems, especially with open source technologies. My blog is called [Not a Monad Tutorial](http://notamonadtutorial.com/). I am the tech lead of a small company I own called [LambdaClass](https://github.com/lambdaclass/).\r\n\r\nThe language I like the most for that task is Erlang since it has a lot of built-in tools and features that other languages don't have. In companion with Erlang, I usually use databases such as Cassandra, Riak, Elasticsearch, Redis, PostgreSQL and message queues such as Kafka or RabbitMQ. I work a lot with FreeBSD, OpenBSD, Linux and devops tools like Ansible, Chef, Terraform, Grafana and Prometheus. The last year I've started doing some work in the Deep Learning space with Python, Keras, PyTorch and TensorFlow.\r\n\r\nAt last I love playing with OCaml, Racket/Lisp, Rust and Elm. ","is_moderator":false,"karma":4656,"avatar_url":"/avatars/unbalancedparentheses-100.png","invited_by_user":"talboito","github_username":"unbalancedparentheses","twitter_username":"unbalancedparen"},"tags":["assembly","compilers"]},{"short_id":"jzukoz","short_id_url":"https://lobste.rs/s/jzukoz","created_at":"2023-01-03T11:06:41.000-06:00","title":"Explicit sequencing of C programs","url":"http://deavmi.assigned.network/research/","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eMy research and development project that I worked on during my honours year of 2022 was on the topic of “Explicit sequencing of C programs” whereby I looked at ways to improve the current state of Software Verification in \u003ca href=\"http://www.southampton.ac.uk/~gp1y10/cseq/\" rel=\"ugc\"\u003eLazy-CSeq\u003c/a\u003e with regards to the underspecified evaluation ordering of function arguments and binary operators in the C programming language. The transformation module was written in Python2 (as is standard with CSeq).\u003c/p\u003e\n","description_plain":"My research and development project that I worked on during my honours year of 2022 was on the topic of “Explicit sequencing of C programs” whereby I looked at ways to improve the current state of Software Verification in [Lazy-CSeq](http://www.southampton.ac.uk/~gp1y10/cseq/) with regards to the underspecified evaluation ordering of function arguments and binary operators in the C programming language. The transformation module was written in Python2 (as is standard with CSeq).","comments_url":"https://lobste.rs/s/jzukoz/explicit_sequencing_c_programs","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I’m Tristan B. Kildaire (or deavmi on the Internet) and I’m a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I’m really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There’s so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I’ve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I’m not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":40,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","twitter_username":"TristanKildaire","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["c","programming","testing"]},{"short_id":"bzthnm","short_id_url":"https://lobste.rs/s/bzthnm","created_at":"2023-01-02T23:05:08.000-06:00","title":"DragonFlyBSD: release 6.4","url":"https://www.dragonflybsd.org/release64/","score":11,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bzthnm/dragonflybsd_release_6_4","submitter_user":{"username":"vladislavp","created_at":"2019-01-21T08:38:06.000-06:00","is_admin":false,"about":"Consultant:   Enterprise Architecture, Data Governance, IAM. Distributed Backends dev, React Native/React Native Web, Android.","is_moderator":false,"karma":777,"avatar_url":"/avatars/vladislavp-100.png","invited_by_user":"wink"},"tags":["dragonflybsd","release"]},{"short_id":"fpouso","short_id_url":"https://lobste.rs/s/fpouso","created_at":"2023-01-03T10:27:34.000-06:00","title":"PocketBase wrapper with serializer/deserializer support for D","url":"https://github.com/Hax-io/libpb","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eI am an avid D developer and I needed PocketBase but a wrapper for it in D for use for a provate project of mine. At the same time I was very fond of the idea of being able to easily serialize and deserialize arbitrary data types (structs) to the PocketBase format of JSON and vice-versa. D’s meta programming facilities (of which I was completely new to) made this possible and I now have something I am rather proud of.\u003c/p\u003e\n\u003cp\u003eJust some minor error handling and possible flags I may want to add but so far it is working well (and integrating into the aforementioned project of mine well).\u003c/p\u003e\n\u003cp\u003eAPI docs here: \u003ca href=\"https://libpb.dpldocs.info/libpb.html\" rel=\"ugc\"\u003ehttps://libpb.dpldocs.info/libpb.html\u003c/a\u003e\u003c/p\u003e\n","description_plain":"I am an avid D developer and I needed PocketBase but a wrapper for it in D for use for a provate project of mine. At the same time I was very fond of the idea of being able to easily serialize and deserialize arbitrary data types (structs) to the PocketBase format of JSON and vice-versa. D's meta programming facilities (of which I was completely new to) made this possible and I now have something I am rather proud of.\r\n\r\nJust some minor error handling and possible flags I may want to add but so far it is working well (and integrating into the aforementioned project of mine well).\r\n\r\nAPI docs here: https://libpb.dpldocs.info/libpb.html","comments_url":"https://lobste.rs/s/fpouso/pocketbase_wrapper_with_serializer","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I’m Tristan B. Kildaire (or deavmi on the Internet) and I’m a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I’m really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There’s so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I’ve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I’m not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":40,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","twitter_username":"TristanKildaire","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["api","d","databases"]},{"short_id":"6qgmde","short_id_url":"https://lobste.rs/s/6qgmde","created_at":"2023-01-03T14:59:01.000-06:00","title":"Some people say 2048-bit RSA is vulnerable to a combo of conventional and current quantum computers","url":"https://www.schneier.com/blog/archives/2023/01/breaking-rsa-with-a-quantum-computer.html","score":1,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6qgmde/some_people_say_2048_bit_rsa_is_vulnerable","submitter_user":{"username":"hoistbypetard","created_at":"2019-12-22T23:11:15.000-06:00","is_admin":false,"about":"I enjoy turning coffee into code.","is_moderator":false,"karma":3026,"avatar_url":"/avatars/hoistbypetard-100.png","invited_by_user":"yumaikas"},"tags":["cryptography","security"]},{"short_id":"fcmgjj","short_id_url":"https://lobste.rs/s/fcmgjj","created_at":"2023-01-02T12:50:46.000-06:00","title":"What to do about hotlinking","url":"https://www.kryogenix.org/days/2023/01/02/what-to-do-about-hotlinking/","score":14,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/fcmgjj/what_do_about_hotlinking","submitter_user":{"username":"popey","created_at":"2017-05-30T11:49:05.000-05:00","is_admin":false,"about":"Engineering Manager \u0026 Developer Advocate on Telegraf at InfluxData. Previously Snap Advocate at Canonical working on Ubuntu, father, husband, cat lover \u0026 a geek through and through","is_moderator":false,"karma":375,"avatar_url":"/avatars/popey-100.png","invited_by_user":"mjturner","github_username":"popey","twitter_username":"popey"},"tags":["web"]},{"short_id":"mwdbx1","short_id_url":"https://lobste.rs/s/mwdbx1","created_at":"2023-01-03T05:33:12.000-06:00","title":"Burn: Deep Learning Framework in Rust","url":"https://github.com/burn-rs/burn","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mwdbx1/burn_deep_learning_framework_rust","submitter_user":{"username":"aviram","created_at":"2022-10-31T09:51:39.000-05:00","is_admin":false,"about":"Did some in security, then backend engineering, now CEO @ MetalBear","is_moderator":false,"karma":55,"avatar_url":"/avatars/aviram-100.png","invited_by_user":"infiniteregrets"},"tags":["ai","rust"]},{"short_id":"njzbnf","short_id_url":"https://lobste.rs/s/njzbnf","created_at":"2023-01-03T14:15:18.000-06:00","title":"Satisfiability: Theory, Practice, and Beyond Boot Camp","url":"https://simons.berkeley.edu/workshops/satisfiability-theory-practice-beyond-boot-camp","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eAll videos are public under the “videos” tab.\u003c/p\u003e\n","description_plain":"All videos are public under the \"videos\" tab.","comments_url":"https://lobste.rs/s/njzbnf/satisfiability_theory_practice_beyond","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":24914,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne","twitter_username":"Hillelogram"},"tags":["compsci","video"]},{"short_id":"lkb4es","short_id_url":"https://lobste.rs/s/lkb4es","created_at":"2023-01-03T14:11:29.000-06:00","title":"What's in a Pod?","url":"https://solidlabresearch.github.io/WhatsInAPod/","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkb4es/what_s_pod","submitter_user":{"username":"quintus","created_at":"2014-10-24T09:28:57.000-05:00","is_admin":false,"about":"Dipl.-Jur. (Ruhr-Universität Bochum). German jurist and assistant scientist at a Chair for Public Law, open-source programmer with Ruby, Go, C, C++. Debian user. [Blog](https://mg.guelker.eu/). Lead developer of a free software 2D jump-and-run game named [TSC](https://secretchronicles.org).","is_moderator":false,"karma":888,"avatar_url":"/avatars/quintus-100.png","invited_by_user":"skade"},"tags":["api","distributed"]}]