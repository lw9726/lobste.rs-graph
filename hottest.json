[{"short_id":"dfs5jc","short_id_url":"https://lobste.rs/s/dfs5jc","created_at":"2023-05-31T10:03:28.000-05:00","title":"I think Zig is hard...but worth it","url":"http://ratfactor.com/zig/hard","score":26,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dfs5jc/i_think_zig_is_hard_worth_it","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":8689,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["zig"]},{"short_id":"o4usyg","short_id_url":"https://lobste.rs/s/o4usyg","created_at":"2023-05-31T03:57:10.000-05:00","title":"Programming with one or less hands","url":"","score":17,"flags":0,"comment_count":21,"description":"\u003cp\u003eGreetings,\u003c/p\u003e\n\u003cp\u003eI will soon undergo surgery for my dominant arm (shoulder), which means I won’t be able to code properly for a couple of weeks. I have already tried programming with only my left hand. While possible, it is truly painful, as I work at 20-30% efficiency, depending on what I do.\u003c/p\u003e\n\u003cp\u003eI was wondering whether there are any good free and open source tools that assist programming with hand impairments. I know there is custom hardware for such cases, but that’s not quite worth for a temporary impairment. I already have the tap strap, as I’ve had multiple surgeries and injuries in the past (you could say I am a regular), but it is not very pleasant to work with, especially since I can’t move my fingers in a coordinated enough manner.\u003c/p\u003e\n\u003cp\u003eThe main issue with one is really that most IDE shortcuts aren’t very usable and constantly switching between mouse and keyboard is also quite annoying, making navigation even slower. And I assume it would be useful to have certain snippets that one often writes on some kind of quick shortcut.\u003c/p\u003e\n\u003cp\u003eI assume in the end a mix of voice input and some kind of IDE plugin or global keyboard remapping would be a good solution? It’s probably hard to find something that is truly cross platform though, as I use both linux and windows as daily drivers.\u003c/p\u003e\n","description_plain":"Greetings,\r\n\r\nI will soon undergo surgery for my dominant arm (shoulder), which means I won't be able to code properly for a couple of weeks. I have already tried programming with only my left hand. While possible, it is truly painful, as I work at 20-30% efficiency, depending on what I do.\r\n\r\nI was wondering whether there are any good free and open source tools that assist programming with hand impairments. I know there is custom hardware for such cases, but that's not quite worth for a temporary impairment. I already have the tap strap, as I've had multiple surgeries and injuries in the past (you could say I am a regular), but it is not very pleasant to work with, especially since I can't move my fingers in a coordinated enough manner.\r\n\r\nThe main issue with one is really that most IDE shortcuts aren't very usable and constantly switching between mouse and keyboard is also quite annoying, making navigation even slower. And I assume it would be useful to have certain snippets that one often writes on some kind of quick shortcut.\r\n\r\nI assume in the end a mix of voice input and some kind of IDE plugin or global keyboard remapping would be a good solution? It's probably hard to find something that is truly cross platform though, as I use both linux and windows as daily drivers.","comments_url":"https://lobste.rs/s/o4usyg/programming_with_one_less_hands","submitter_user":{"username":"bios-marcel","created_at":"2022-10-07T09:42:43.000-05:00","is_admin":false,"about":"Dev from germany, smashing my head on a keyboard for a living.\r\n\r\nMostly doing Golang and did Java before that.","is_moderator":false,"karma":17,"avatar_url":"/avatars/bios-marcel-100.png","invited_by_user":"southclaws","github_username":"Bios-Marcel"},"tags":["a11y","ask","programming"]},{"short_id":"hnz7iu","short_id_url":"https://lobste.rs/s/hnz7iu","created_at":"2023-05-30T22:08:44.000-05:00","title":"We've learned nothing from the SolarWinds hack","url":"https://cyrnel.net/solarwinds-hack-lessons-learned/","score":16,"flags":0,"comment_count":13,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hnz7iu/we_ve_learned_nothing_from_solarwinds","submitter_user":{"username":"cetera","created_at":"2021-08-29T17:59:24.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":497,"avatar_url":"/avatars/cetera-100.png","invited_by_user":"jj5"},"tags":["security"]},{"short_id":"uefpv7","short_id_url":"https://lobste.rs/s/uefpv7","created_at":"2023-05-31T06:03:02.000-05:00","title":"Hacking my “smart” toothbrush","url":"https://kuenzi.dev/toothbrush/","score":13,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/uefpv7/hacking_my_smart_toothbrush","submitter_user":{"username":"river","created_at":"2016-04-03T11:33:05.000-05:00","is_admin":false,"about":"(Deleted account)","is_moderator":false,"karma":5981,"avatar_url":"/avatars/river-100.png","invited_by_user":"355E3B"},"tags":["security"]},{"short_id":"hbvl3j","short_id_url":"https://lobste.rs/s/hbvl3j","created_at":"2023-05-31T10:11:34.000-05:00","title":"How's about Git?","url":"https://www.flipt.io/blog/gitops-announcement","score":6,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hbvl3j/how_s_about_git","submitter_user":{"username":"GeorgeMac","created_at":"2020-07-13T05:32:27.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":21,"avatar_url":"/avatars/GeorgeMac-100.png","invited_by_user":"brettbuddin"},"tags":["go","vcs"]},{"short_id":"xi3mi0","short_id_url":"https://lobste.rs/s/xi3mi0","created_at":"2023-05-31T12:07:55.000-05:00","title":"Does a programming language with ML-style modules need packages?","url":"https://softwareengineering.stackexchange.com/q/445747/398052","score":4,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xi3mi0/does_programming_language_with_ml_style","submitter_user":{"username":"Corbin","created_at":"2018-10-13T21:40:32.000-05:00","is_admin":false,"about":"Secure distributed computation should not be hard.\r\n\r\nmi pu'i tavla fo lo jbobau .i mi'e la korvo","is_moderator":false,"karma":5450,"avatar_url":"/avatars/Corbin-100.png","invited_by_user":"infinisil"},"tags":["compsci","plt"]},{"short_id":"94z0u3","short_id_url":"https://lobste.rs/s/94z0u3","created_at":"2023-05-30T13:07:14.000-05:00","title":"Directly compiling Scheme to WebAssembly: lambdas, recursion, iteration","url":"https://spritely.institute/news/scheme-to-wasm-lambdas-recursion.html","score":32,"flags":0,"comment_count":17,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/94z0u3/directly_compiling_scheme_webassembly","submitter_user":{"username":"dustyweb","created_at":"2016-04-14T14:27:23.000-05:00","is_admin":false,"about":"Free software activist, (co-)founder MediaGoblin, 8sync, etc.","is_moderator":false,"karma":1085,"avatar_url":"/avatars/dustyweb-100.png","invited_by_user":"antifuchs"},"tags":["lisp","wasm","web"]},{"short_id":"ugeagh","short_id_url":"https://lobste.rs/s/ugeagh","created_at":"2023-05-30T12:15:53.000-05:00","title":"Modern CPUs have a backstage cast","url":"https://www.devever.net/~hl/backstage-cast","score":44,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ugeagh/modern_cpus_have_backstage_cast","submitter_user":{"username":"hlandau","created_at":"2018-02-05T17:52:06.000-06:00","is_admin":false,"about":"Hi.\r\n\r\n[My website.](https://www.devever.net/~hl/)\r\n\r\n[Contact me.](https://www.devever.net/~hl/contact)","is_moderator":false,"karma":1343,"avatar_url":"/avatars/hlandau-100.png","invited_by_user":"calvin","github_username":"hlandau","keybase_signatures":[{"kb_username":"hlandau","sig_hash":"c3566b9ec6b0259c65e487e2f2104a9018f2c6b07b2f269fce2cb3286520994f0f"}]},"tags":["hardware"]},{"short_id":"4cynth","short_id_url":"https://lobste.rs/s/4cynth","created_at":"2023-05-31T01:35:37.000-05:00","title":"Introducing Iguana: extremely fast SIMD-optimized decompression","url":"https://sneller.io/blog/decompressing-at-over-10-gigabytes-per-second/","score":10,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4cynth/introducing_iguana_extremely_fast_simd","submitter_user":{"username":"lorddimwit","created_at":"2016-08-15T09:39:45.000-05:00","is_admin":false,"about":"\r\n","is_moderator":false,"karma":13443,"avatar_url":"/avatars/lorddimwit-100.png","invited_by_user":"cks","github_username":"deadpixi"},"tags":["compsci","go"]},{"short_id":"3jqru1","short_id_url":"https://lobste.rs/s/3jqru1","created_at":"2023-05-31T12:53:19.000-05:00","title":"Web's Most Underutilized API: Text Fragments","url":"","score":4,"flags":0,"comment_count":0,"description":"\u003cp\u003eAs someone who frequently takes notes, I was excited when text fragments were introduced to browsers about four years ago. I anticipated the widespread adoption of this feature across websites and blogs. However, to my disappointment, this never happened. Today, I aim to rekindle this idea by illustrating the usefulness of text fragments.\u003c/p\u003e\n\u003cp\u003eTo begin, let’s look at an example:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=the%20android%20support%20in%20playwright%20is%20experimental%20and%20hence%2C%20comes%20with%20a%20few%20limitations\" rel=\"ugc\"\u003ehttps://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=the%20android%20support%20in%20playwright%20is%20experimental%20and%20hence%2C%20comes%20with%20a%20few%20limitations\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThis URL contains a text fragment, directing you directly to a specific sentence within an article—in this case, my blog post about Playwright testing. However, this feature can be applied to any website, e.g. GitHub\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/microsoft/playwright#:~:text=Playwright%20is%20a%20framework%20for%20Web%20Testing%20and%20Automation\" rel=\"ugc\"\u003ehttps://github.com/microsoft/playwright#:~:text=Playwright%20is%20a%20framework%20for%20Web%20Testing%20and%20Automation\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDespite seeming like a simple percent-encoded text fragment within a URL, it’s actually facilitated by an ingenious API.\u003c/p\u003e\n\u003cp\u003eImagine a situation where you want to highlight a specific instance of a recurring word in an article, like “Playwright”. How would the browser know which of the many references you intended to share? Here’s how to do it:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=Android%20support%20in-,playwright,-is%20experimental%20and\" rel=\"ugc\"\u003ehttps://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=Android%20support%20in-,playwright,-is%20experimental%20and\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eThe text fragment syntax allows you to pinpoint text by specifying the words that surround it. Here’s the syntax:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e#:~:text=[prefix-,]textStart[,textEnd][,-suffix]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the provided example, the browser highlights the correct instance of “Playwright” because it looks for it between “Android support in” and “is experimental and”.\u003c/p\u003e\n\u003cp\u003eHowever, I believe the lack of widespread adoption of text fragments is due to the absence of native browser support for generating these fragments. It would be beneficial if users could simply select the text and share a link to a specific fragment within an article. In fact, you can try this out for yourself—select any text in this article and observe the URL change.\u003c/p\u003e\n\u003cp\u003eNow, you might wonder how I accomplished this. There’s a function called \u003ccode\u003egenerateFragment\u003c/code\u003e that’s included in the \u003ca href=\"https://github.com/GoogleChromeLabs/text-fragments-polyfill\" rel=\"ugc\"\u003e\u003ccode\u003etext-fragments-polyfill\u003c/code\u003e polyfill\u003c/a\u003e utility. However, there’s hardly any information about this outside of a single article I’ve found.\u003c/p\u003e\n\u003cp\u003eHere’s the key code for it:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-ts\"\u003eimport { generateFragment } from 'text-fragments-polyfill/dist/fragment-generation-utils.js';\n\nexport const generateTextFragment = (selection: Selection): string | null =\u0026gt; {\n  const result = generateFragment(selection);\n\n  if (result.status !== 0) {\n    return null;\n  }\n\n  let url = `${location.origin}${location.pathname}${location.search}`;\n\n  const fragment = result.fragment;\n  const prefix = fragment.prefix\n    ? `${encodeURIComponent(fragment.prefix)}-,`\n    : '';\n  const suffix = fragment.suffix\n    ? `,-${encodeURIComponent(fragment.suffix)}`\n    : '';\n  const start = encodeURIComponent(fragment.textStart);\n  const end = fragment. textEnd ? `,${encodeURIComponent(fragment. textEnd)}` : '';\n\n  url += `#:~:text=${prefix}${start}${end}${suffix}`;\n\n  return url;\n};\n\ndocument.addEventListener('mouseup', () =\u0026gt; {\n  const selection = window.getSelection();\n\n  if (!selection) {\n    return;\n  }\n\n  history.replaceState(null, '', generateTextFragment(selection));\n});\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWith this code, visitors to your website can link to any text fragment they want to share.\u003c/p\u003e\n\u003cp\u003eText fragments can be used in a variety of scenarios to provide more context and specificity when sharing content. It is a great way to improve the user experience and make it easier for people to share content. With this post, I hope to encourage more people to adopt this feature.\u003c/p\u003e\n","description_plain":"As someone who frequently takes notes, I was excited when text fragments were introduced to browsers about four years ago. I anticipated the widespread adoption of this feature across websites and blogs. However, to my disappointment, this never happened. Today, I aim to rekindle this idea by illustrating the usefulness of text fragments.\r\n\r\nTo begin, let's look at an example:\r\n\r\nhttps://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=the%20android%20support%20in%20playwright%20is%20experimental%20and%20hence%2C%20comes%20with%20a%20few%20limitations\r\n\r\nThis URL contains a text fragment, directing you directly to a specific sentence within an article—in this case, my blog post about Playwright testing. However, this feature can be applied to any website, e.g. GitHub\r\n\r\nhttps://github.com/microsoft/playwright#:~:text=Playwright%20is%20a%20framework%20for%20Web%20Testing%20and%20Automation\r\n\r\nDespite seeming like a simple percent-encoded text fragment within a URL, it's actually facilitated by an ingenious API.\r\n\r\nImagine a situation where you want to highlight a specific instance of a recurring word in an article, like \"Playwright\". How would the browser know which of the many references you intended to share? Here's how to do it:\r\n\r\nhttps://ray.run/blog/playwright-mobile-app-testing-for-android-a-comprehensive-guide#:~:text=Android%20support%20in-,playwright,-is%20experimental%20and\r\n\r\nThe text fragment syntax allows you to pinpoint text by specifying the words that surround it. Here's the syntax:\r\n\r\n```\r\n#:~:text=[prefix-,]textStart[,textEnd][,-suffix]\r\n```\r\n\r\nIn the provided example, the browser highlights the correct instance of \"Playwright\" because it looks for it between \"Android support in\" and \"is experimental and\".\r\n\r\nHowever, I believe the lack of widespread adoption of text fragments is due to the absence of native browser support for generating these fragments. It would be beneficial if users could simply select the text and share a link to a specific fragment within an article. In fact, you can try this out for yourself—select any text in this article and observe the URL change.\r\n\r\nNow, you might wonder how I accomplished this. There's a function called `generateFragment` that's included in the [`text-fragments-polyfill` polyfill](https://github.com/GoogleChromeLabs/text-fragments-polyfill) utility. However, there's hardly any information about this outside of a single article I've found.\r\n\r\nHere's the key code for it:\r\n\r\n```ts\r\nimport { generateFragment } from 'text-fragments-polyfill/dist/fragment-generation-utils.js';\r\n\r\nexport const generateTextFragment = (selection: Selection): string | null =\u003e {\r\n  const result = generateFragment(selection);\r\n\r\n  if (result.status !== 0) {\r\n    return null;\r\n  }\r\n\r\n  let url = `${location.origin}${location.pathname}${location.search}`;\r\n\r\n  const fragment = result.fragment;\r\n  const prefix = fragment.prefix\r\n    ? `${encodeURIComponent(fragment.prefix)}-,`\r\n    : '';\r\n  const suffix = fragment.suffix\r\n    ? `,-${encodeURIComponent(fragment.suffix)}`\r\n    : '';\r\n  const start = encodeURIComponent(fragment.textStart);\r\n  const end = fragment. textEnd ? `,${encodeURIComponent(fragment. textEnd)}` : '';\r\n\r\n  url += `#:~:text=${prefix}${start}${end}${suffix}`;\r\n\r\n  return url;\r\n};\r\n\r\ndocument.addEventListener('mouseup', () =\u003e {\r\n  const selection = window.getSelection();\r\n\r\n  if (!selection) {\r\n    return;\r\n  }\r\n\r\n  history.replaceState(null, '', generateTextFragment(selection));\r\n});\r\n```\r\n\r\nWith this code, visitors to your website can link to any text fragment they want to share.\r\n\r\nText fragments can be used in a variety of scenarios to provide more context and specificity when sharing content. It is a great way to improve the user experience and make it easier for people to share content. With this post, I hope to encourage more people to adopt this feature.","comments_url":"https://lobste.rs/s/3jqru1/web_s_most_underutilized_api_text","submitter_user":{"username":"lucgagan","created_at":"2023-05-23T16:08:59.000-05:00","is_admin":false,"about":"Crafting bug-free software with an enjoyable touch.","is_moderator":false,"karma":3,"avatar_url":"/avatars/lucgagan-100.png","invited_by_user":"matklad"},"tags":["a11y","browsers","web"]},{"short_id":"u9fxug","short_id_url":"https://lobste.rs/s/u9fxug","created_at":"2023-05-31T04:33:44.000-05:00","title":"Dev Home for Windows Developers","url":"https://learn.microsoft.com/en-us/windows/dev-home/","score":5,"flags":0,"comment_count":5,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u9fxug/dev_home_for_windows_developers","submitter_user":{"username":"bugsmith","created_at":"2023-04-21T08:58:57.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":277,"avatar_url":"/avatars/bugsmith-100.png","invited_by_user":"river","github_username":"jmcharter"},"tags":["programming","release","windows"]},{"short_id":"z5wujk","short_id_url":"https://lobste.rs/s/z5wujk","created_at":"2023-05-30T15:45:20.000-05:00","title":"Turds","url":"https://novalis.org/blog/2023-05-30-turds.html","score":19,"flags":0,"comment_count":14,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/z5wujk/turds","submitter_user":{"username":"carlmjohnson","created_at":"2021-07-19T11:55:18.000-05:00","is_admin":false,"about":"Carl M. Johnson is a philosopher and programmer, currently employed as the Director of Technology for Spotlight PA.","is_moderator":false,"karma":10537,"avatar_url":"/avatars/carlmjohnson-100.png","invited_by_user":"peterbourgon","github_username":"carlmjohnson","twitter_username":"carlmjohnson"},"tags":["ai","design"]},{"short_id":"zhd15w","short_id_url":"https://lobste.rs/s/zhd15w","created_at":"2023-05-30T19:49:12.000-05:00","title":"Makefile basics","url":"https://gist.github.com/isaacs/62a2d1825d04437c6f08","score":11,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zhd15w/makefile_basics","submitter_user":{"username":"borracciaBlu","created_at":"2019-11-18T04:25:59.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":71,"avatar_url":"/avatars/borracciaBlu-100.png","invited_by_user":"dacav"},"tags":["education"]},{"short_id":"vddh6i","short_id_url":"https://lobste.rs/s/vddh6i","created_at":"2023-05-31T12:10:12.000-05:00","title":"Inside ChatGPT's Brain","url":"https://serokell.io/blog/language-models-behind-chatgpt","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/vddh6i/inside_chatgpt_s_brain","submitter_user":{"username":"tbonesteaks","created_at":"2019-09-24T11:30:46.000-05:00","is_admin":false,"about":"Feel free to email at: tbonesteaks at protonmail.com","is_moderator":false,"karma":1471,"avatar_url":"/avatars/tbonesteaks-100.png","invited_by_user":"wink"},"tags":["ai"]},{"short_id":"dwc1ar","short_id_url":"https://lobste.rs/s/dwc1ar","created_at":"2023-05-31T11:30:59.000-05:00","title":"Against generality (2016)","url":"https://novalis.org/blog/2016-09-27-against-generality.html","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/dwc1ar/against_generality_2016","submitter_user":{"username":"hwayne","created_at":"2016-12-01T13:09:45.000-06:00","is_admin":false,"about":"I'm a programmer in the Chicago area. I like writing about weird programming techniques. Outside of programming I'm an avid juggler and chocolatier.","is_moderator":false,"karma":27051,"avatar_url":"/avatars/hwayne-100.png","invited_by_user":"flyingfisch","github_username":"hwayne"},"tags":["practices"]},{"short_id":"6jfqd0","short_id_url":"https://lobste.rs/s/6jfqd0","created_at":"2023-05-30T12:20:39.000-05:00","title":"A chiral aperiodic monotile","url":"https://cs.uwaterloo.ca/~csk/spectre/","score":18,"flags":0,"comment_count":7,"description":"\u003cp\u003eA follow-up to \u003ca href=\"https://cs.uwaterloo.ca/~csk/hat/\" rel=\"ugc\"\u003ethe “hat” aperiodic monotile\u003c/a\u003e: the “spectre” can tile without reflections\u003c/p\u003e\n","description_plain":"A follow-up to [the “hat” aperiodic monotile](https://cs.uwaterloo.ca/~csk/hat/): the “spectre” can tile without reflections","comments_url":"https://lobste.rs/s/6jfqd0/chiral_aperiodic_monotile","submitter_user":{"username":"fanf","created_at":"2022-05-13T07:44:03.000-05:00","is_admin":false,"about":"BIND developer at isc.org\r\n\r\nhttps://dotat.at","is_moderator":false,"karma":355,"avatar_url":"/avatars/fanf-100.png","invited_by_user":"isomer"},"tags":["math"]},{"short_id":"rdit0h","short_id_url":"https://lobste.rs/s/rdit0h","created_at":"2023-05-30T07:33:36.000-05:00","title":"Using UPX for compression might work against you","url":"https://usrme.xyz/posts/using-upx-for-compression-might-work-against-you/","score":16,"flags":0,"comment_count":10,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rdit0h/using_upx_for_compression_might_work","submitter_user":{"username":"usrme","created_at":"2021-10-05T04:34:58.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":618,"avatar_url":"/avatars/usrme-100.png","invited_by_user":"gerikson"},"tags":["performance"]},{"short_id":"ry4rlt","short_id_url":"https://lobste.rs/s/ry4rlt","created_at":"2023-05-31T09:43:18.000-05:00","title":"How Lossless Data Compression Works","url":"https://www.quantamagazine.org/how-lossless-data-compression-works-20230531/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ry4rlt/how_lossless_data_compression_works","submitter_user":{"username":"anyfactor","created_at":"2023-04-01T08:21:48.000-05:00","is_admin":false,"about":"An enthusiast in all things in interesting, and not an expert in anything.","is_moderator":false,"karma":33,"avatar_url":"/avatars/anyfactor-100.png","invited_by_user":"tluyben2"},"tags":["compsci","programming"]},{"short_id":"mlngqn","short_id_url":"https://lobste.rs/s/mlngqn","created_at":"2023-05-31T09:21:22.000-05:00","title":"PRFs, PRPs and other fantastic things","url":"https://blog.cryptographyengineering.com/2023/05/08/prfs-prps-and-other-fantastic-things/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/mlngqn/prfs_prps_other_fantastic_things","submitter_user":{"username":"cendyne","created_at":"2021-08-20T11:42:04.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":119,"avatar_url":"/avatars/cendyne-100.png","invited_by_user":"soatok","github_username":"cendyne","twitter_username":"CendyneNaga"},"tags":["cryptography"]},{"short_id":"aksady","short_id_url":"https://lobste.rs/s/aksady","created_at":"2023-05-30T18:58:52.000-05:00","title":"WASIX, the Superset of WASI Supporting Threads, Processes and Sockets","url":"https://wasmer.io/posts/announcing-wasix","score":6,"flags":0,"comment_count":8,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aksady/wasix_superset_wasi_supporting_threads","submitter_user":{"username":"bryfry","created_at":"2014-02-18T07:01:27.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":78,"avatar_url":"/avatars/bryfry-100.png","invited_by_user":"b7j0c"},"tags":["c","rust","wasm"]},{"short_id":"5r7gca","short_id_url":"https://lobste.rs/s/5r7gca","created_at":"2023-05-31T07:12:04.000-05:00","title":"Testing the Packet Protocol: Bare Metal Programming Series","url":"https://youtu.be/rG1Faau2QuM","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5r7gca/testing_packet_protocol_bare_metal","submitter_user":{"username":"FrancisStokes","created_at":"2023-03-08T15:48:50.000-06:00","is_admin":false,"about":"I'm Francis Stokes, a firmware engineer living in the Netherlands.\r\n\r\nI make low level computing videos on the [Low Byte Productions](https://youtube.com/@lowbyteproductions) YouTube channel, and blog in markdown files on [github](https://github.com/francisrstokes/githublog)","is_moderator":false,"karma":118,"avatar_url":"/avatars/FrancisStokes-100.png","invited_by_user":"jmiven","github_username":"francisrstokes","twitter_username":"fstokesman"},"tags":["c","hardware","video"]},{"short_id":"nedsfl","short_id_url":"https://lobste.rs/s/nedsfl","created_at":"2023-05-31T12:39:03.000-05:00","title":"Nezha: Deployable and High-Performance Consensus Using Synchronized Clocks","url":"https://www.vldb.org/pvldb/vol16/p629-geng.pdf","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/nedsfl/nezha_deployable_high_performance","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"eatonphil.com","is_moderator":false,"karma":4871,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"eatonphil"},"tags":["databases","distributed","pdf"]},{"short_id":"xfyk2b","short_id_url":"https://lobste.rs/s/xfyk2b","created_at":"2023-05-31T02:51:53.000-05:00","title":"Spleen 2.0.0 released with full CP437 support","url":"https://www.cambus.net/spleen-2.0.0-released-with-full-cp437-support/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/xfyk2b/spleen_2_0_0_released_with_full_cp437","submitter_user":{"username":"fcambus","created_at":"2012-09-10T08:43:10.000-05:00","is_admin":false,"about":"System and Network engineer.\r\n\r\nInterests: ANSI Art, DNS, NetBSD, OpenBSD, Security, and Text Mode.\r\n\r\nSite: https://www.cambus.net","is_moderator":false,"karma":3929,"avatar_url":"/avatars/fcambus-100.png","invited_by_user":"gmcabrita","github_username":"fcambus","twitter_username":"fcambus"},"tags":["design","release"]},{"short_id":"utpgdk","short_id_url":"https://lobste.rs/s/utpgdk","created_at":"2023-05-30T21:27:44.000-05:00","title":"SVG Images from Postgres","url":"https://www.crunchydata.com/blog/svg-images-from-postgis","score":8,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/utpgdk/svg_images_from_postgres","submitter_user":{"username":"anyfactor","created_at":"2023-04-01T08:21:48.000-05:00","is_admin":false,"about":"An enthusiast in all things in interesting, and not an expert in anything.","is_moderator":false,"karma":33,"avatar_url":"/avatars/anyfactor-100.png","invited_by_user":"tluyben2"},"tags":["databases"]},{"short_id":"npylv8","short_id_url":"https://lobste.rs/s/npylv8","created_at":"2023-05-31T10:43:51.000-05:00","title":"How s2n-quic uses Kani to inspire confidence","url":"https://model-checking.github.io/kani-verifier-blog/2023/05/30/how-s2n-quic-uses-kani-to-inspire-confidence.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/npylv8/how_s2n_quic_uses_kani_inspire_confidence","submitter_user":{"username":"camshaft","created_at":"2022-11-20T08:28:10.000-06:00","is_admin":false,"about":"Principal Engineer at AWS Cryptography","is_moderator":false,"karma":4,"avatar_url":"/avatars/camshaft-100.png","invited_by_user":"matklad","github_username":"camshaft"},"tags":["formalmethods","rust","testing"]}]