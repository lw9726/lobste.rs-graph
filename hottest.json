[{"short_id":"k4z2qf","short_id_url":"https://lobste.rs/s/k4z2qf","created_at":"2023-03-11T09:08:11.000-06:00","title":"write posix shell","url":"https://j3s.sh/thought/write-posix-shell.html","score":38,"flags":0,"comment_count":29,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/k4z2qf/write_posix_shell","submitter_user":{"username":"j3s","created_at":"2019-11-21T23:38:10.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":496,"avatar_url":"/avatars/j3s-100.png","invited_by_user":"Misch"},"tags":["unix"]},{"short_id":"ro3fq8","short_id_url":"https://lobste.rs/s/ro3fq8","created_at":"2023-03-12T04:54:47.000-05:00","title":"Building a Privacy-First Newsletter","url":"https://blog.kjamistan.com/building-a-privacy-first-newsletter.html","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ro3fq8/building_privacy_first_newsletter","submitter_user":{"username":"kjam","created_at":"2019-03-16T08:04:53.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":0,"avatar_url":"/avatars/kjam-100.png","invited_by_user":"gerikson"},"tags":["email","privacy","web"]},{"short_id":"h8wbhs","short_id_url":"https://lobste.rs/s/h8wbhs","created_at":"2023-03-12T03:02:49.000-05:00","title":"GHC 9.6.1 is now available","url":"https://www.haskell.org/ghc/blog/20230310-ghc-9.6.1-released.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/h8wbhs/ghc_9_6_1_is_now_available","submitter_user":{"username":"ehamberg","created_at":"2014-08-18T02:47:08.000-05:00","is_admin":false,"about":"https://keybase.io/eh","is_moderator":false,"karma":3621,"avatar_url":"/avatars/ehamberg-100.png","invited_by_user":"oleavr"},"tags":["haskell","release"]},{"short_id":"bonajo","short_id_url":"https://lobste.rs/s/bonajo","created_at":"2023-03-11T14:25:08.000-06:00","title":"Why Are There No Relational DBMSs? (2015)","url":"https://www.dcs.warwick.ac.uk/~hugh/TTM/Why-Are-There-No-Relational-DBMSs.pdf","score":10,"flags":0,"comment_count":3,"description":"\u003cp\u003eabstract:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI describe the circumstances in which I obtained, in\n1978, a good answer to a burning question: how can\nE.F. Codd’s relational model of data of 1970 [2] be\nproperly embraced by a computer language?\nConsidering that the answer to that question\n(“An Algebra of Relations for Machine\nComputation”) was publicly available in 1975, I\nwonder why it all went wrong and suggest some\npossible reasons.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eBut this paragraph on page 11 is perhaps a better abstract, or at least one that explains the title better:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThat situation therefore prompts us to ask, why isn’t SQL truly relational? And, given\nthat it isn’t, why did the industry at large so readily embrace it? Well, we can easily forgive the\nindustry at large, I suppose, because in spite of all its defects, SQL was a hugely significant\nadvance on what we had before—its implementations did offer a fairly intuitive declarative query\nlanguage without the need for loops or pointer chasing, and they did offer a modicum of physical\ndata independence. But why didn’t its inventors come up with a truly relational language? Why\ndid they neglect the obvious need for each of a table’s columns to have a name? Why did they\nallow a table to have two or more columns with the same name? Why did they decide to allow\nmore than one copy of the same row to appear in a table? Why did they invent NULL and\nintroduce that third truth value, UNKNOWN?\u003c/p\u003e\n\u003c/blockquote\u003e\n","description_plain":"abstract:\r\n\r\n\u003e I describe the circumstances in which I obtained, in\r\n\u003e 1978, a good answer to a burning question: how can\r\n\u003e E.F. Codd’s relational model of data of 1970 [2] be\r\n\u003e properly embraced by a computer language?\r\n\u003e Considering that the answer to that question\r\n\u003e (“An Algebra of Relations for Machine\r\n\u003e Computation”) was publicly available in 1975, I\r\n\u003e wonder why it all went wrong and suggest some\r\n\u003e possible reasons.\r\n\r\nBut this paragraph on page 11 is perhaps a better abstract, or at least one that explains the title better:\r\n\r\n\u003e That situation therefore prompts us to ask, why isn’t SQL truly relational? And, given\r\n\u003e that it isn’t, why did the industry at large so readily embrace it? Well, we can easily forgive the\r\n\u003e industry at large, I suppose, because in spite of all its defects, SQL was a hugely significant\r\n\u003e advance on what we had before—its implementations did offer a fairly intuitive declarative query\r\n\u003e language without the need for loops or pointer chasing, and they did offer a modicum of physical\r\n\u003e data independence. But why didn’t its inventors come up with a truly relational language? Why\r\n\u003e did they neglect the obvious need for each of a table’s columns to have a name? Why did they\r\n\u003e allow a table to have two or more columns with the same name? Why did they decide to allow\r\n\u003e more than one copy of the same row to appear in a table? Why did they invent NULL and\r\n\u003e introduce that third truth value, UNKNOWN?","comments_url":"https://lobste.rs/s/bonajo/why_are_there_no_relational_dbmss_2015","submitter_user":{"username":"Sietsebb","created_at":"2017-01-03T08:32:51.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":2969,"avatar_url":"/avatars/Sietsebb-100.png","invited_by_user":"asthasr"},"tags":["databases","historical","pdf"]},{"short_id":"wswo1k","short_id_url":"https://lobste.rs/s/wswo1k","created_at":"2023-03-11T21:58:40.000-06:00","title":"Macige - CI workflow generator for mobile app development","url":"https://github.com/tramlinehq/macige","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/wswo1k/macige_ci_workflow_generator_for_mobile","submitter_user":{"username":"pratul","created_at":"2018-11-29T01:09:02.000-06:00","is_admin":false,"about":"I work on [tramline.app](https://tramline.app). \r\n","is_moderator":false,"karma":14,"avatar_url":"/avatars/pratul-100.png","invited_by_user":"abhin4v"},"tags":["android","devops","ios"]},{"short_id":"zjghwo","short_id_url":"https://lobste.rs/s/zjghwo","created_at":"2023-03-11T09:33:08.000-06:00","title":"Weird – Websites as the atomic matter of the internet","url":"https://blog.erlend.sh/weird-web-pages","score":8,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zjghwo/weird_websites_as_atomic_matter_internet","submitter_user":{"username":"erlend_sh","created_at":"2015-09-08T12:07:37.000-05:00","is_admin":false,"about":"Open source enthusiast. Professional community manager.","is_moderator":false,"karma":229,"avatar_url":"/avatars/erlend_sh-100.png","invited_by_user":"curiositry"},"tags":["rust","wasm","web"]},{"short_id":"a6m5cy","short_id_url":"https://lobste.rs/s/a6m5cy","created_at":"2023-03-11T11:04:02.000-06:00","title":"GC Extension for WebAssembly","url":"https://github.com/WebAssembly/gc/blob/master/proposals/gc/Overview.md","score":9,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/a6m5cy/gc_extension_for_webassembly","submitter_user":{"username":"snej","created_at":"2020-01-26T19:05:30.000-06:00","is_admin":false,"about":"Mobile Architect at Couchbase. Apple veteran, 1991-2007 (iChat, Safari, Java, OpenDoc, AppleScript.)\r\nBragging rights: I came up with the speech bubbles that most chat GUIs use nowadays.\r\nIn my spare time I play guitar and buy synthesizers.","is_moderator":false,"karma":7946,"avatar_url":"/avatars/snej-100.png","invited_by_user":"bbrks","github_username":"snej"},"tags":["assembly","plt","web"]},{"short_id":"rk8351","short_id_url":"https://lobste.rs/s/rk8351","created_at":"2023-03-12T01:10:01.000-06:00","title":"Stack Machines and Where To Find Them","url":"https://zdimension.fr/stack-machines-and-where-to-find-them/","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/rk8351/stack_machines_where_find_them","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["programming"]},{"short_id":"djlgpd","short_id_url":"https://lobste.rs/s/djlgpd","created_at":"2023-03-11T12:26:38.000-06:00","title":"Disambiguating Arm, Arm ARM, Armv9, ARM9, ARM64, Aarch64, A64, A78","url":"https://nickdesaulniers.github.io/blog/2023/03/10/disambiguating-arm/","score":10,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/djlgpd/disambiguating_arm_arm_arm_armv9_arm9","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["assembly"]},{"short_id":"d0ptcu","short_id_url":"https://lobste.rs/s/d0ptcu","created_at":"2023-03-10T13:37:52.000-06:00","title":"What are your favourite pieces of software?","url":"","score":54,"flags":0,"comment_count":101,"description":"\u003cp\u003eIt can feel (especially in my circles) that good software doesn’t really exist these days, so I really like seeing what other people do actually like.\u003c/p\u003e\n\u003cp\u003eAre there any pieces of software (or maybe SaaS) that you would recommend almost without caveat? Or maybe something you don’t use but makes you glad, happy or hopeful.\u003c/p\u003e\n","description_plain":"It can feel (especially in my circles) that good software doesn't really exist these days, so I really like seeing what other people do actually like.\r\n\r\nAre there any pieces of software (or maybe SaaS) that you would recommend almost without caveat? Or maybe something you don't use but makes you glad, happy or hopeful.","comments_url":"https://lobste.rs/s/d0ptcu/what_are_your_favourite_pieces_software","submitter_user":{"username":"lim","created_at":"2020-10-14T14:05:51.000-05:00","is_admin":false,"about":"Mostly a gardener these days but still Going On The Computer.","is_moderator":false,"karma":1280,"avatar_url":"/avatars/lim-100.png","invited_by_user":"orbifx"},"tags":["ask","programming"]},{"short_id":"44pb79","short_id_url":"https://lobste.rs/s/44pb79","created_at":"2023-03-11T18:25:44.000-06:00","title":"Shell-free scripts with Execa 7","url":"https://medium.com/@ehmicky/shell-free-scripts-with-execa-7-885fb3b42f83","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/44pb79/shell_free_scripts_with_execa_7","submitter_user":{"username":"ehmicky","created_at":"2019-01-21T08:33:02.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":43,"avatar_url":"/avatars/ehmicky-100.png","invited_by_user":"wink"},"tags":["javascript","nodejs"]},{"short_id":"ldxlfp","short_id_url":"https://lobste.rs/s/ldxlfp","created_at":"2023-03-11T00:54:46.000-06:00","title":"Running LLaMA 7B on a 64GB M2 MacBook Pro with llama.cpp","url":"https://til.simonwillison.net/llms/llama-7b-m2","score":13,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ldxlfp/running_llama_7b_on_64gb_m2_macbook_pro","submitter_user":{"username":"simonw","created_at":"2021-07-29T15:43:15.000-05:00","is_admin":false,"about":"Creator of https://datasette.io","is_moderator":false,"karma":977,"avatar_url":"/avatars/simonw-100.png","invited_by_user":"scoates","github_username":"simonw"},"tags":["ai"]},{"short_id":"o0bwtj","short_id_url":"https://lobste.rs/s/o0bwtj","created_at":"2023-03-11T07:22:50.000-06:00","title":"text-saver: A browser extension to save texts anytime, anywhere","url":"https://github.com/jiacai2050/text-saver","score":7,"flags":1,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/o0bwtj/text_saver_browser_extension_save_texts","submitter_user":{"username":"jiacai2050","created_at":"2020-06-02T07:10:57.000-05:00","is_admin":false,"about":"Rust developer at day and Zig at night.\r\n","is_moderator":false,"karma":115,"avatar_url":"/avatars/jiacai2050-100.png","invited_by_user":"gerikson","github_username":"jiacai2050","twitter_username":"liujiacai"},"tags":["browsers"]},{"short_id":"ugy36a","short_id_url":"https://lobste.rs/s/ugy36a","created_at":"2023-03-11T03:46:04.000-06:00","title":"The oldest privesc: injecting careless administrators’ terminals using TTY pushback","url":"https://www.errno.fr/TTYPushback.html","score":12,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ugy36a/oldest_privesc_injecting_careless","submitter_user":{"username":"iliaf","created_at":"2022-12-14T21:06:35.000-06:00","is_admin":false,"about":"Technology nerd, cyber security engineer and father.","is_moderator":false,"karma":13,"avatar_url":"/avatars/iliaf-100.png","invited_by_user":"bvs"},"tags":["linux","security"]},{"short_id":"iqhb05","short_id_url":"https://lobste.rs/s/iqhb05","created_at":"2023-03-11T21:56:47.000-06:00","title":"Mark My Words: Dangers of Watermarked Images in ImageNet","url":"https://arxiv.org/pdf/2303.05498.pdf","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe utilization of pre-trained networks, especially those trained on ImageNet, has become a common practice in Computer Vision. However, prior research has indicated that a significant number of images in the ImageNet dataset contain watermarks, making pre-trained networks susceptible to learning artifacts such as watermark patterns within their latent spaces. In this paper, we aim to assess the extent to which popular pre-trained architectures display such behavior and to determine which classes are most affected. Additionally, we examine the impact of watermarks on the extracted features. Contrary to the popular belief that the Chinese logographic watermarks impact the “carton” class only, our analysis reveals that a variety of ImageNet classes, such as “monitor”, “broom”, “apron” and “safe” rely on spurious correlations. Finally, we propose a simple approach to mitigate this issue in fine-tuned networks by ignoring the encodings from the feature-extractor layer of ImageNet pre-trained networks that are most susceptible to watermark imprints.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.05498\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The utilization of pre-trained networks, especially those trained on ImageNet, has become a common practice in Computer Vision. However, prior research has indicated that a significant number of images in the ImageNet dataset contain watermarks, making pre-trained networks susceptible to learning artifacts such as watermark patterns within their latent spaces. In this paper, we aim to assess the extent to which popular pre-trained architectures display such behavior and to determine which classes are most affected. Additionally, we examine the impact of watermarks on the extracted features. Contrary to the popular belief that the Chinese logographic watermarks impact the \"carton\" class only, our analysis reveals that a variety of ImageNet classes, such as \"monitor\", \"broom\", \"apron\" and \"safe\" rely on spurious correlations. Finally, we propose a simple approach to mitigate this issue in fine-tuned networks by ignoring the encodings from the feature-extractor layer of ImageNet pre-trained networks that are most susceptible to watermark imprints. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.05498)","comments_url":"https://lobste.rs/s/iqhb05/mark_my_words_dangers_watermarked_images","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["ai","pdf"]},{"short_id":"2raiki","short_id_url":"https://lobste.rs/s/2raiki","created_at":"2023-03-11T21:44:31.000-06:00","title":"Dishing Out DoS: How to Disable and Secure the Starlink User Terminal","url":"https://arxiv.org/pdf/2303.00582.pdf","score":2,"flags":0,"comment_count":0,"description":"\u003cp\u003eSatellite user terminals are a promising target for adversaries seeking to target satellite communication networks. Despite this, many protections commonly found in terrestrial routers are not present in some user terminals.\nAs a case study we audit the attack surface presented by the Starlink router’s admin interface, using fuzzing to uncover a denial of service attack on the Starlink user terminal. We explore the attack’s impact, particularly in the cases of drive-by attackers, and attackers that are able to maintain a continuous presence on the network. Finally, we discuss wider implications, looking at lessons learned in terrestrial router security, and how to properly implement them in this new context.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.00582\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Satellite user terminals are a promising target for adversaries seeking to target satellite communication networks. Despite this, many protections commonly found in terrestrial routers are not present in some user terminals.\r\nAs a case study we audit the attack surface presented by the Starlink router's admin interface, using fuzzing to uncover a denial of service attack on the Starlink user terminal. We explore the attack's impact, particularly in the cases of drive-by attackers, and attackers that are able to maintain a continuous presence on the network. Finally, we discuss wider implications, looking at lessons learned in terrestrial router security, and how to properly implement them in this new context. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.00582)","comments_url":"https://lobste.rs/s/2raiki/dishing_out_dos_how_disable_secure","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["pdf","security"]},{"short_id":"6fawiq","short_id_url":"https://lobste.rs/s/6fawiq","created_at":"2023-03-11T16:48:35.000-06:00","title":"A wunderBAR Story","url":"http://www.os2museum.com/wp/a-wunderbar-story/","score":4,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6fawiq/wunderbar_story","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["historical"]},{"short_id":"bbbjfz","short_id_url":"https://lobste.rs/s/bbbjfz","created_at":"2023-03-10T09:18:44.000-06:00","title":"NixOS in Production","url":"https://leanpub.com/nixos-in-production","score":47,"flags":0,"comment_count":7,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/bbbjfz/nixos_production","submitter_user":{"username":"Gabriella439","created_at":"2022-05-09T10:31:48.000-05:00","is_admin":false,"about":"Author of @dhall_lang, haskellforall.com, and countless packages and presentations.\r\n\r\nLeads Haskell+Nix team at @AristaNetworks.\r\n\r\nFP simp (she/they) 🏳️‍⚧","is_moderator":false,"karma":405,"avatar_url":"/avatars/Gabriella439-100.png","invited_by_user":"joepie91","github_username":"Gabriella439","twitter_username":"GabriellaG439"},"tags":["book","nix","release"]},{"short_id":"1qeanq","short_id_url":"https://lobste.rs/s/1qeanq","created_at":"2023-03-11T23:30:06.000-06:00","title":"Lecture :pkgsrc - Package management for BSD, illumos, Linux and MacOS","url":"https://chemnitzer.linux-tage.de/2023/de/programm/beitrag/125","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1qeanq/lecture_pkgsrc_package_management_for","submitter_user":{"username":"jaypatelani","created_at":"2020-08-26T22:43:27.000-05:00","is_admin":false,"about":"BSD hobbyist. NetBSD/OS108 user","is_moderator":false,"karma":1047,"avatar_url":"/avatars/jaypatelani-100.png","invited_by_user":"qbit"},"tags":["dragonflybsd","freebsd","illumos","linux","mac","netbsd","openbsd"]},{"short_id":"3ycgfx","short_id_url":"https://lobste.rs/s/3ycgfx","created_at":"2023-03-11T16:45:26.000-06:00","title":"Hash Tables FTW","url":"http://www.os2museum.com/wp/hash-tables-ftw/","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/3ycgfx/hash_tables_ftw","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["performance"]},{"short_id":"1wiec3","short_id_url":"https://lobste.rs/s/1wiec3","created_at":"2023-03-11T16:42:29.000-06:00","title":"Reverse-engineering the register codes for the 8086 processor's microcode","url":"http://www.righto.com/2023/03/8086-register-codes.html","score":3,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/1wiec3/reverse_engineering_register_codes_for","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","historical","reversing"]},{"short_id":"u5twdx","short_id_url":"https://lobste.rs/s/u5twdx","created_at":"2023-03-11T13:01:22.000-06:00","title":"Andromeda Invaders: Auto Play: Press 'Enter' twice and wait 5 seconds","url":"https://susam.net/invaders.html","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u5twdx/andromeda_invaders_auto_play_press_enter","submitter_user":{"username":"susam","created_at":"2020-04-29T15:40:43.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":2068,"avatar_url":"/avatars/susam-100.png","invited_by_user":"premysl","github_username":"susam","twitter_username":"susam"},"tags":["games","show"]},{"short_id":"kthfvu","short_id_url":"https://lobste.rs/s/kthfvu","created_at":"2023-03-11T21:57:40.000-06:00","title":"A classification of S-boxes generated by Orthogonal Cellular Automata","url":"https://arxiv.org/pdf/2303.05228.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eMost of the approaches published in the literature to construct S-boxes via Cellular Automata (CA) work by either iterating a finite CA for several time steps, or by a one-shot application of the global rule. The main characteristic that brings together these works is that they employ a single CA rule to define the vectorial Boolean function of the S-box. In this work, we explore a different direction for the design of S-boxes that leverages on Orthogonal CA (OCA), i.e. pairs of CA rules giving rise to orthogonal Latin squares. The motivation stands on the facts that an OCA pair already defines a bijective transformation, and moreover the orthogonality property of the resulting Latin squares ensures a minimum amount of diffusion. We exhaustively enumerate all S-boxes generated by OCA pairs of diameter $4 \\le d \\le 6$, and measure their nonlinearity. Interestingly, we observe that for $d=4$ and $d=5$ all S-boxes are linear, despite the underlying CA local rules being nonlinear. The smallest nonlinear S-boxes emerges for $d=6$, but their nonlinearity is still too low to be used in practice. Nonetheless, we unearth an interesting structure of linear OCA S-boxes, proving that their Linear Components Space (LCS) is itself the image of a linear CA, or equivalently a polynomial code. We finally classify all linear OCA S-boxes in terms of their generator polynomials.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.05228\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Most of the approaches published in the literature to construct S-boxes via Cellular Automata (CA) work by either iterating a finite CA for several time steps, or by a one-shot application of the global rule. The main characteristic that brings together these works is that they employ a single CA rule to define the vectorial Boolean function of the S-box. In this work, we explore a different direction for the design of S-boxes that leverages on Orthogonal CA (OCA), i.e. pairs of CA rules giving rise to orthogonal Latin squares. The motivation stands on the facts that an OCA pair already defines a bijective transformation, and moreover the orthogonality property of the resulting Latin squares ensures a minimum amount of diffusion. We exhaustively enumerate all S-boxes generated by OCA pairs of diameter $4 \\le d \\le 6$, and measure their nonlinearity. Interestingly, we observe that for $d=4$ and $d=5$ all S-boxes are linear, despite the underlying CA local rules being nonlinear. The smallest nonlinear S-boxes emerges for $d=6$, but their nonlinearity is still too low to be used in practice. Nonetheless, we unearth an interesting structure of linear OCA S-boxes, proving that their Linear Components Space (LCS) is itself the image of a linear CA, or equivalently a polynomial code. We finally classify all linear OCA S-boxes in terms of their generator polynomials. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.05228)","comments_url":"https://lobste.rs/s/kthfvu/classification_s_boxes_generated_by","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["cryptography","pdf"]},{"short_id":"0grcqx","short_id_url":"https://lobste.rs/s/0grcqx","created_at":"2023-03-11T21:55:00.000-06:00","title":"SALSA PICANTE: a machine learning attack on LWE with binary secrets","url":"https://eprint.iacr.org/2023/340.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe Learning With Errors (LWE) problem is one of the major hard problems in post-quantum cryptography. For example, 1) the only Key Exchange Mechanism KEM standardized by NIST [14] is based on LWE; and 2) current publicly available Homomorphic Encryption (HE) libraries are based on LWE. NIST KEM schemes use random secrets, but homomorphic encryption schemes use binary or ternary secrets, for efficiency reasons. In particular, sparse binary secrets have been proposed, but not standardized [2], for HE.\u003c/p\u003e\n\u003cp\u003ePrior work SALSA [49] demonstrated a new machine learning attack on sparse binary secrets for the LWE problem in small dimensions (up to n = 128) and low Hamming weights (up to h = 4). However, this attack assumed access to millions of LWE samples, and was not scaled to higher Hamming weights or dimensions.\u003c/p\u003e\n\u003cp\u003eOur attack, PICANTE, reduces the number of samples required to just m = 4n samples. Moreover, it can recover secrets with much larger dimensions (up to 350) and Hamming weights (roughly n/10, or h = 33 for n = 300). To achieve this, we introduce a preprocessing step which allows us to generate the training data from a linear number of samples and changes the distribution of the training data to improve transformer training. We also improve the distinguisher/secret recovery methods of SALSA and introduce a novel cross-attention recovery mechanism which allows us to read-off the secret directly from the trained models.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/340\" rel=\"ugc\"\u003eIACR\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The Learning With Errors (LWE) problem is one of the major hard problems in post-quantum cryptography. For example, 1) the only Key Exchange Mechanism KEM standardized by NIST [14] is based on LWE; and 2) current publicly available Homomorphic Encryption (HE) libraries are based on LWE. NIST KEM schemes use random secrets, but homomorphic encryption schemes use binary or ternary secrets, for efficiency reasons. In particular, sparse binary secrets have been proposed, but not standardized [2], for HE.\r\n\r\n  Prior work SALSA [49] demonstrated a new machine learning attack on sparse binary secrets for the LWE problem in small dimensions (up to n = 128) and low Hamming weights (up to h = 4). However, this attack assumed access to millions of LWE samples, and was not scaled to higher Hamming weights or dimensions.\r\n\r\n  Our attack, PICANTE, reduces the number of samples required to just m = 4n samples. Moreover, it can recover secrets with much larger dimensions (up to 350) and Hamming weights (roughly n/10, or h = 33 for n = 300). To achieve this, we introduce a preprocessing step which allows us to generate the training data from a linear number of samples and changes the distribution of the training data to improve transformer training. We also improve the distinguisher/secret recovery methods of SALSA and introduce a novel cross-attention recovery mechanism which allows us to read-off the secret directly from the trained models.\r\n\r\n[IACR](https://eprint.iacr.org/2023/340)","comments_url":"https://lobste.rs/s/0grcqx/salsa_picante_machine_learning_attack_on","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["ai","cryptography","pdf"]},{"short_id":"xktuab","short_id_url":"https://lobste.rs/s/xktuab","created_at":"2023-03-11T21:53:59.000-06:00","title":"Automatic verification of transparency protocols (extended version)","url":"https://arxiv.org/pdf/2303.04500.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eWe introduce new features in ProVerif, an automatic tool for verifying security protocols, and a methodology for using them. This methodology and these features are aimed at protocols which involve sophisticated data types that have strong properties, such as Merkle trees, which allow compact proofs of data presence and tree extension. Such data types are widely used in protocols in systems that use distributed ledgers and/or blockchains.\u003c/p\u003e\n\u003cp\u003eWith our methodology, it is possible to describe the data type quite abstractly, using ProVerif axioms, and prove the correctness of the protocol using those axioms as assumptions. Then, in separate steps, one can define one or more concrete implementations of the data type, and again use ProVerif to show that the implementations satisfy the assumptions that were coded as axioms. This helps make compositional proofs, splitting the proof burden into several manageable pieces.\nTo enable this methodology, we introduce new capabilities in ProVerif, by extending the class of lemmas and axioms that it can reason with. Specifically, we allow user-defined predicates, attacker predicates and message predicates to appear in lemmas and axioms. We show the soundness of the implementation of this idea with respect to the semantics.\u003c/p\u003e\n\u003cp\u003eWe illustrate the methodology and features by providing the first formal verification of two transparency protocols which precisely models the Merkle tree data structure. The two protocols are transparent decryption and certificate transparency. Transparent decryption is a way of ensuring that decryption operations are visible by people who are affected by them. This can be used to support privacy: it can mean that a subject is alerted to the fact that information about them has been decrypted. Certificate transparency is an Internet security standard for monitoring and auditing the issuance of digital certificates.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://arxiv.org/abs/2303.04500\" rel=\"ugc\"\u003earXiv\u003c/a\u003e\u003c/p\u003e\n","description_plain":" We introduce new features in ProVerif, an automatic tool for verifying security protocols, and a methodology for using them. This methodology and these features are aimed at protocols which involve sophisticated data types that have strong properties, such as Merkle trees, which allow compact proofs of data presence and tree extension. Such data types are widely used in protocols in systems that use distributed ledgers and/or blockchains.\r\n\r\nWith our methodology, it is possible to describe the data type quite abstractly, using ProVerif axioms, and prove the correctness of the protocol using those axioms as assumptions. Then, in separate steps, one can define one or more concrete implementations of the data type, and again use ProVerif to show that the implementations satisfy the assumptions that were coded as axioms. This helps make compositional proofs, splitting the proof burden into several manageable pieces.\r\nTo enable this methodology, we introduce new capabilities in ProVerif, by extending the class of lemmas and axioms that it can reason with. Specifically, we allow user-defined predicates, attacker predicates and message predicates to appear in lemmas and axioms. We show the soundness of the implementation of this idea with respect to the semantics.\r\n\r\nWe illustrate the methodology and features by providing the first formal verification of two transparency protocols which precisely models the Merkle tree data structure. The two protocols are transparent decryption and certificate transparency. Transparent decryption is a way of ensuring that decryption operations are visible by people who are affected by them. This can be used to support privacy: it can mean that a subject is alerted to the fact that information about them has been decrypted. Certificate transparency is an Internet security standard for monitoring and auditing the issuance of digital certificates. \r\n\r\n[arXiv](https://arxiv.org/abs/2303.04500)","comments_url":"https://lobste.rs/s/xktuab/automatic_verification_transparency","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95957,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["formalmethods","pdf"]}]